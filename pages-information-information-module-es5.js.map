{"version":3,"sources":["webpack:///src/app/pages/information/information.page.html","webpack:///src/app/pages/information/information-routing.module.ts","webpack:///src/app/pages/information/information.module.ts","webpack:///src/app/pages/information/information.page.scss","webpack:///src/app/pages/information/information.page.ts"],"names":["routes","path","component","InformationPageRoutingModule","imports","forChild","exports","InformationPageModule","declarations","InformationPage","route","proofRepository","informationRepository","proof$","paramMap","pipe","params","get","hash","getByHash$","hash$","locationInformation$","proof","getByProof$","informationList","filter","information","type","otherInformation$","deviceInformation$","refresh$","subscribe","checkProperties","selector","template"],"mappings":"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","file":"pages-information-information-module-es5.js","sourcesContent":["export default \"<ion-header *transloco=\\\"let t\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button [routerLink]=\\\"['/proof', {hash: (hash$ | async)}]\\\" routerDirection=\\\"back\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ t('informationDetails') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content *transloco=\\\"let t\\\">\\n  <ion-item>\\n    <ion-slide>\\n      <ion-card class=\\\"slide-card\\\">\\n        <ion-card-header>\\n          <ion-card-title>{{ t('location') }}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list lines=\\\"none\\\" *ngFor=\\\"let information of (locationInformation$ | async)\\\">\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">\\n                <h3>{{ information.name }}</h3>\\n                <p>{{ information.value }}</p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-slide>\\n  </ion-item>\\n  <ion-item>\\n    <ion-slide>\\n      <ion-card class=\\\"slide-card\\\">\\n        <ion-card-header>\\n          <ion-card-title>{{ t('other') }}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list lines=\\\"none\\\" *ngFor=\\\"let information of (otherInformation$ | async)\\\">\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">\\n                <h3>{{ information.name }}</h3>\\n                <p>{{ information.value }}</p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-slide>\\n  </ion-item>\\n  <ion-item>\\n    <ion-slide>\\n      <ion-card class=\\\"slide-card\\\">\\n        <ion-card-header>\\n          <ion-card-title>{{ t('device') }}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list lines=\\\"none\\\" *ngFor=\\\"let information of (deviceInformation$ | async)\\\">\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">\\n                <h3>{{ information.name }}</h3>\\n                <p>{{ information.value }}</p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-slide>\\n  </ion-item>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InformationPage } from './information.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: InformationPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InformationPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { InformationPageRoutingModule } from './information-routing.module';\nimport { InformationPage } from './information.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InformationPageRoutingModule,\n    TranslocoModule\n  ],\n  declarations: [InformationPage]\n})\nexport class InformationPageModule { }\n","export default \".slide-card {\\n  width: 100%;\\n}\\n\\n.multiline {\\n  white-space: pre-wrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaW5mb3JtYXRpb24vaW5mb3JtYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UscUJBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm9ybWF0aW9uL2luZm9ybWF0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zbGlkZS1jYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tdWx0aWxpbmUge1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG59XG4iXX0= */\";","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { map, pluck, switchMap, switchMapTo } from 'rxjs/operators';\nimport { InformationType } from 'src/app/services/data/information/information';\nimport { InformationRepository } from 'src/app/services/data/information/information-repository.service';\nimport { ProofRepository } from 'src/app/services/data/proof/proof-repository.service';\nimport { isNonNullable } from 'src/app/utils/rx-operators';\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.page.html',\n  styleUrls: ['./information.page.scss'],\n})\nexport class InformationPage {\n\n  readonly proof$ = this.route.paramMap.pipe(\n    map(params => params.get('hash')),\n    isNonNullable(),\n    switchMap(hash => this.proofRepository.getByHash$(hash)),\n    isNonNullable()\n  );\n\n  readonly hash$ = this.proof$.pipe(pluck('hash'));\n\n  readonly locationInformation$ = this.proof$.pipe(\n    switchMap(proof => this.informationRepository.getByProof$(proof)),\n    map(informationList => informationList.filter(information => information.type === InformationType.Location))\n  );\n\n  readonly otherInformation$ = this.proof$.pipe(\n    switchMap(proof => this.informationRepository.getByProof$(proof)),\n    map(informationList => informationList.filter(information => information.type === InformationType.Other))\n  );\n\n  readonly deviceInformation$ = this.proof$.pipe(\n    switchMap(proof => this.informationRepository.getByProof$(proof)),\n    map(informationList => informationList.filter(information => information.type === InformationType.Device))\n  );\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly proofRepository: ProofRepository,\n    private readonly informationRepository: InformationRepository,\n  ) { }\n\n  ionViewWillEnter() {\n    this.proofRepository.refresh$().pipe(\n      switchMapTo(this.informationRepository.refresh$()),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n}\n"]}