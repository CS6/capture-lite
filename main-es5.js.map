{"version":3,"sources":["webpack:///src/app/services/collector/signature/signature-provider.ts","webpack:///src/app/services/camera/camera.service.ts","webpack:///src/app/services/publisher/publishers-alert/publishers-alert.service.ts","webpack:///src/app/services/language/language.service.ts","webpack:///src/app/utils/file/file.ts","webpack:///src/app/services/publisher/sample-publisher/sample-publisher.ts","webpack:///src/app/services/collector/signature/default-provider/default-provider.ts","webpack:///src/app/services/data/information/information-repository.service.ts","webpack:///src/app/utils/mime-type.ts","webpack:///src/environments/environment.ts","webpack:///src/app/utils/preferences/preferences.ts","webpack:///src/app/services/collector/information/information-provider.ts","webpack:///src/app/services/serialization/serialization.service.ts","webpack:///src/app/utils/rx-operators.ts","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/services/data/signature/signature-repository.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/services/collector/information/capacitor-provider/capacitor-provider.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/transloco/transloco-root.module.ts","webpack:///src/app/services/collector/collector.service.ts","webpack:///src/app/utils/encoding/encoding.ts","webpack:///src/app/services/data/caption/caption-repository.service.ts","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/services/notification/notification.service.ts","webpack:///src/app/utils/background-task/background-task.ts","webpack:///src/app/utils/storage/storage.ts","webpack:///src/app/utils/preferences/preference-manager.ts","webpack:///src/app/utils/crypto/crypto.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/publisher/publisher.ts","webpack:///src/app/app.component.scss","webpack:///src/app/services/data/proof/proof-repository.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SignatureProvider","signatureRepository","serializationService","proof","stringify$","pipe","serialized","provide$","signature","add$","App","Camera","CameraService","getPhoto","resultType","Base64","source","quality","allowEditing","cameraPhoto","format","base64String","appRestored$","handler","addListener","result","pluginId","methodName","success","data","providedIn","PublishersAlert","alertController","translocoService","publishers","publisher","push","getEnabledPublishers$","create","header","translate","inputs","map","index","name","type","label","value","checked","buttons","text","role","getPublisherByName","publish","alertElement","present","isEnabled$","_","isEnabled","find","preferences","LANGUAGE_PREF","LanguageService","languages","defaultLanguage","currentLanguageKey$","getString$","setDefaultLang","key","setCurrentLanguage$","setString$","setActiveLang","fileNameWithoutExtension","uri","match","SamplePublisher","DEFAULT_SIGNATURE_PROVIDER_PREF","DefaultSignatureProvider","getPrivateKey$","privateKeyHex","signatureHex","getPublicKey$","publicKeyHex","proofHash","hash","provider","publicKey","privateKey","length","InformationRepository","informationStorage","getAll$","informationList","filter","info","getByProof$","remove$","getExtension","mimeType","fromExtension","extension","TypeError","environment","production","Storage","Preferences","subjects","Map","defaultValue","converter","JSON","parse","has","existed","_get$","get","asObservable","converted","updateSubjects","get$","v","Number","stringify","set","set$","String","next","InformationProvider","informationRepository","information","SerializationService","createSortedProofInformation$","sortedProofInformation","sortedInformation","sort","a","b","providerCompared","localeCompare","nameCompared","valueCompared","isNonNullable","source$","undefined","forkJoinWithDefault","sources","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","webpackAsyncContextKeys","Object","module","exports","SignatureRepository","signatureStorage","signatures","SplashScreen","AppComponent","platform","collectorService","publishersAlert","notificationService","langaugeService","cameraService","restoreAppStatus","initializeApp","initializeCollector","initializePublisher","initialize$","subscribe","restoreKilledAppResult$","storeAndCollect","ready","hide","addInformationProvider","addSignatureProvider","addPublisher","checkProperties","selector","template","Device","Geolocation","DEFAULT_INFORMATION_PROVIDER_PREF","CapacitorProvider","isDeviceInfoCollectionEnabled$","isLocationInfoCollectionEnabled$","isDeviceInfoCollectionEnabled","isLocationInfoCollectionEnabled","getInfo","getBatteryInfo","getLanguageCode","getCurrentPosition","enableHighAccuracy","maximumAge","timeout","deviceInfo","batteryInfo","languageCode","geolocationPosition","uuid","importance","model","appVersion","appBuild","operatingSystem","osVersion","manufacturer","isVirtual","memUsed","diskFree","diskTotal","batteryLevel","isCharging","coords","latitude","longitude","getBoolean$","enable","setBoolean$","AppModule","declarations","entryComponents","imports","forRoot","providers","provide","useClass","bootstrap","entries","TranslocoHttpLoader","http","lang","TranslocoRootModule","useValue","availableLangs","defaultLang","fallbackLang","missingHandler","useFallbackTranslation","reRenderOnLangChange","prodMode","CollectorService","proofRepository","informationProviders","Set","signatureProviders","rawBase64","store$","collectAndSign$","saveRawFile$","timestamp","Date","now","notificationId","createNotificationId","notify","collectAndStore$","signAndStore$","cancel","error","notifyError","forEach","add","textEncoder","TextEncoder","textDecoder","TextDecoder","base64ToArrayBuffer","base64","binaryString","atob","bytes","Uint8Array","i","charCodeAt","buffer","arrayBufferToBase64","arrayBuffer","btoa","fromCharCode","arrayBufferToHex","toString","padStart","join","hexToArrayBuffer","hex","h","parseInt","stringToArrayBuffer","str","encode","arrayBufferToString","decode","base64ToBlob$","fetch","res","blob","blobToBase64$","fileReader","FileReader","subject$","onloadend","complete","readAsDataURL","CaptionRepository","captionStorage","captions","caption","found","all","slice","LocalNotifications","NotificationService","currentId","requestPermission","console","log","granted","title","body","schedule","notifications","BackgroundTask","subscribeInBackground","work$","isPluginAvailable","taskId","beforeExit","finish","Filesystem","directory","Data","tuples$","hasInitialized","refresh$","makeNameDir$","readNameDir$","fileNames","fileName","readFile$","tuples","mkdir","path","recursive","err","message","readdir","readFile","encoding","UTF8","checkInitialization$","tuple","saveFile$","writeFile","deleteFile$","deleteFile","PreferenceManager","subtle","crypto","SHA_256","ECDSA","SECP256R1","sha256$","object","json","sha256WithString$","digest","digested","sha256WithBase64$","createEcKeyPair$","generateKey","namedCurve","exportEcdsaPublicKey$","exportEcdsaPrivateKey$","signWithSha256AndEcdsa$","importEcdsaPrivateKey$","sign","verifyWithSha256AndEcdsa$","importEcdsaPublicKey$","verify","exportKey","keyHex","importKey","routes","redirectTo","pathMatch","loadChildren","m","StoragePageModule","SettingsPageModule","ProofPageModule","InformationPageModule","GeneralPageModule","DefaultInformationProviderPageModule","DefaultSignaturePageModule","AboutPageModule","AppRoutingModule","preloadingStrategy","relativeLinkResolution","Publisher","publisherName","run$","ImageBlobReduce","ProofRepository","captionRepository","proofStorage","rawFileDir","rawFileFolderName","thumbnailFileDir","thumbnailFileFolderName","thumbnailSize","proofList","proofs","deleteRawFile$","removeByProof$","_saveRawFile$","generateAndSaveThumbnailFile$","rawUri","rawImageBlob","toBlob","max","thumbnailBlob","thumbnailBase64","bootstrapModule","window","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Observable } from 'rxjs';\nimport { pluck, switchMap } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Signature } from '../../data/signature/signature';\nimport { SignatureRepository } from '../../data/signature/signature-repository.service';\nimport { SerializationService } from '../../serialization/serialization.service';\n\nexport abstract class SignatureProvider {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly signatureRepository: SignatureRepository,\n    private readonly serializationService: SerializationService\n  ) { }\n\n  signAndStore$(proof: Proof) {\n    return this.serializationService.stringify$(proof).pipe(\n      switchMap(serialized => this.provide$(proof, serialized)),\n      switchMap(signature => this.signatureRepository.add$(signature)),\n      pluck(0)\n    );\n  }\n\n  protected abstract provide$(proof: Proof, serialized: string): Observable<Signature>;\n}\n","import { Injectable } from '@angular/core';\nimport { AppRestoredResult, CameraPhoto, CameraResultType, CameraSource, Plugins } from '@capacitor/core';\nimport { defer, fromEventPattern } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nconst { App, Camera } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CameraService {\n\n  capture$() {\n    return defer(() => Camera.getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 100,\n      allowEditing: false\n    })).pipe(\n      map(cameraPhoto => ({\n        format: cameraPhoto.format,\n        // tslint:disable-next-line: no-non-null-assertion\n        base64String: cameraPhoto.base64String!\n      }))\n    );\n  }\n\n  restoreKilledAppResult$() {\n    const appRestored$ = fromEventPattern<AppRestoredResult>(\n      handler => App.addListener('appRestoredResult', handler)\n    );\n    return appRestored$.pipe(\n      filter(result => result.pluginId === 'Camera' && result.methodName === 'getPhoto' && result.success),\n      map(result => result.data as CameraPhoto),\n      map(cameraPhoto => ({\n        format: cameraPhoto.format,\n        // tslint:disable-next-line: no-non-null-assertion\n        base64String: cameraPhoto.base64String!\n      }))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { from, of, zip } from 'rxjs';\nimport { filter, first, pluck, switchMap, toArray } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Publisher } from '../publisher';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublishersAlert {\n\n  private readonly publishers: Publisher[] = [];\n\n  constructor(\n    private readonly alertController: AlertController,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  addPublisher(publisher: Publisher) {\n    this.publishers.push(publisher);\n  }\n\n  present$(proof: Proof) {\n    return this.getEnabledPublishers$().pipe(\n      switchMap(publishers => this.alertController.create({\n        header: this.translocoService.translate('selectAPublisher'),\n        inputs: publishers.map((publisher, index) => ({\n          name: publisher.name,\n          type: 'radio',\n          label: publisher.name,\n          value: publisher.name,\n          checked: index === 0\n        })),\n        buttons: [{\n          text: this.translocoService.translate('cancel'),\n          role: 'cancel'\n        }, {\n          text: this.translocoService.translate('ok'),\n          handler: (name) => this.getPublisherByName(name)?.publish(proof)\n        }]\n      })),\n      switchMap(alertElement => alertElement.present())\n    );\n  }\n\n  private getEnabledPublishers$() {\n    return from(this.publishers).pipe(\n      switchMap(publisher => zip(of(publisher), publisher.isEnabled$().pipe(first()))),\n      filter(([_, isEnabled]) => isEnabled),\n      pluck(0),\n      toArray()\n    );\n  }\n\n  private getPublisherByName(name: string) {\n    return this.publishers.find(publisher => publisher.name === name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { first, mapTo, switchMap } from 'rxjs/operators';\nimport { defaultLanguage, languages } from 'src/app/transloco/transloco-root.module';\nimport { PreferenceManager } from '../../utils/preferences/preference-manager';\n\nconst preferences = PreferenceManager.LANGUAGE_PREF;\nconst enum PrefKeys {\n  Language = 'language'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  readonly languages = languages;\n  readonly defaultLanguage = defaultLanguage;\n  readonly currentLanguageKey$ = preferences.getString$(PrefKeys.Language, defaultLanguage[0]);\n\n  constructor(\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  initialize$() {\n    this.translocoService.setDefaultLang(defaultLanguage[0]);\n    return this.currentLanguageKey$.pipe(\n      first(),\n      switchMap(key => this.setCurrentLanguage$(key))\n    );\n  }\n\n  setCurrentLanguage$(key: string) {\n    return preferences.setString$(PrefKeys.Language, key).pipe(\n      mapTo(this.translocoService.setActiveLang(key)),\n      mapTo(key)\n    );\n  }\n}\n","export function fileNameWithoutExtension(uri: string) {\n    // tslint:disable-next-line: no-non-null-assertion\n    return uri.match(/([^\\/]+)(?=\\.\\w+$)/)![0];\n}\n","import { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Publisher } from '../publisher';\n\nexport class SamplePublisher extends Publisher {\n\n  readonly name = 'Sample Publisher';\n\n  run$(proof: Proof): Observable<void> {\n    return of(void 0).pipe(delay(3000));\n  }\n\n  isEnabled$() {\n    return of(true);\n  }\n}\n","import { Observable, of, zip } from 'rxjs';\nimport { filter, first, map, switchMap, switchMapTo } from 'rxjs/operators';\nimport { Proof } from 'src/app/services/data/proof/proof';\nimport { Signature } from 'src/app/services/data/signature/signature';\nimport { createEcKeyPair$, signWithSha256AndEcdsa$ } from 'src/app/utils/crypto/crypto';\nimport { PreferenceManager } from 'src/app/utils/preferences/preference-manager';\nimport { SignatureProvider } from '../signature-provider';\n\nconst preferences = PreferenceManager.DEFAULT_SIGNATURE_PROVIDER_PREF;\nconst enum PrefKeys {\n  PublicKey = 'publicKey',\n  PrivateKey = 'privateKey'\n}\n\nexport class DefaultSignatureProvider extends SignatureProvider {\n\n  readonly name = 'Web Crypto API';\n\n  static initialize$() {\n    return zip(\n      this.getPublicKey$(),\n      this.getPrivateKey$()\n    ).pipe(\n      first(),\n      filter(([publicKey, privateKey]) => publicKey.length === 0 || privateKey.length === 0),\n      switchMapTo(createEcKeyPair$()),\n      switchMap(({ publicKey, privateKey }) => zip(\n        preferences.setString$(PrefKeys.PublicKey, publicKey),\n        preferences.setString$(PrefKeys.PrivateKey, privateKey)\n      ))\n    );\n  }\n\n  static getPublicKey$() {\n    return preferences.getString$(PrefKeys.PublicKey);\n  }\n\n  static getPrivateKey$() {\n    return preferences.getString$(PrefKeys.PrivateKey);\n  }\n\n  protected provide$(proof: Proof, serialized: string): Observable<Signature> {\n    return DefaultSignatureProvider.getPrivateKey$().pipe(\n      first(),\n      switchMap(privateKeyHex => signWithSha256AndEcdsa$(serialized, privateKeyHex)),\n      switchMap(signatureHex => zip(of(signatureHex), DefaultSignatureProvider.getPublicKey$())),\n      first(),\n      map(([signatureHex, publicKeyHex]) => ({\n        proofHash: proof.hash,\n        provider: this.name,\n        signature: signatureHex,\n        publicKey: publicKeyHex\n      }))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Information } from './information';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InformationRepository {\n\n  private readonly informationStorage = new Storage<Information>('information');\n\n  getByProof$(proof: Proof) {\n    return this.informationStorage.getAll$().pipe(\n      map(informationList => informationList.filter(info => info.proofHash === proof.hash))\n    );\n  }\n\n  add$(...information: Information[]) { return this.informationStorage.add$(...information); }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      switchMap(informationList => this.remove$(...informationList))\n    );\n  }\n\n  remove$(...information: Information[]) {\n    return this.informationStorage.remove$(...information);\n  }\n}\n","// MimeType should be the subset of string type so `JSON.stringify` can generate meaningful text to\n// other platform.\nexport type MimeType = 'image/jpeg' | 'image/png';\n\nexport function getExtension(mimeType: MimeType) {\n  switch (mimeType) {\n    case 'image/jpeg':\n      return 'jpg';\n    case 'image/png':\n      return 'png';\n  }\n}\n\nexport function fromExtension(extension: string): MimeType {\n  switch (extension) {\n    case 'jpg':\n    case 'jpeg':\n      return 'image/jpeg';\n    case 'png':\n      return 'image/png';\n    default:\n      throw TypeError(`Unknown extension: ${extension}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Plugins } from '@capacitor/core';\nimport { BehaviorSubject, defer, Observable, of } from 'rxjs';\nimport { concatMapTo, map, mapTo, pluck, switchMap, tap } from 'rxjs/operators';\n\nconst { Storage } = Plugins;\n\nexport class Preferences {\n\n  constructor(readonly name: string) { }\n\n  private readonly subjects = new Map<string, BehaviorSubject<any>>();\n\n  get$<T>(key: string, defaultValue: T, converter: (str: string) => T = JSON.parse): Observable<T> {\n    return defer(() => of(this.subjects.has(key))).pipe(\n      switchMap(existed => {\n        if (!existed) { return this._get$(key, defaultValue, converter); }\n        return of(existed);\n      }),\n      // tslint:disable-next-line: no-non-null-assertion\n      concatMapTo(defer(() => this.subjects.get(key)!.asObservable()))\n    );\n  }\n\n  private _get$<T>(key: string, defaultValue: T, converter: (str: string) => T): Observable<T> {\n    return defer(() => Storage.get({ key: `${this.name}_${key}` })).pipe(\n      pluck('value'),\n      map(value => (value && value !== '[null]') ? converter(value) : defaultValue),\n      tap(converted => this.updateSubjects(key, converted))\n    );\n  }\n\n  getBoolean$(key: string, defaultValue: boolean = false) {\n    return this.get$(key, defaultValue, (v) => v === 'true');\n  }\n\n  getNumber$(key: string, defaultValue: number = 0) {\n    return this.get$(key, defaultValue, Number);\n  }\n\n  getString$(key: string, defaultValue: string = '') {\n    return this.get$(key, defaultValue, (v) => v);\n  }\n\n  set$<T>(key: string, value: T, converter: (value: T) => string = JSON.stringify): Observable<T> {\n    return defer(() => Storage.set({ key: `${this.name}_${key}`, value: converter(value) })).pipe(\n      mapTo(this.updateSubjects(key, value)),\n      mapTo(value)\n    );\n  }\n\n  setBoolean$(key: string, value: boolean) {\n    return this.set$(key, value, String);\n  }\n\n  setNumber$(key: string, value: number) {\n    return this.set$(key, value, String);\n  }\n\n  setString$(key: string, value: string) {\n    return this.set$(key, value, (v) => v);\n  }\n\n  private updateSubjects<T>(key: string, value: T) {\n    if (this.subjects.has(key)) { this.subjects.get(key)?.next(value); }\n    else { this.subjects.set(key, new BehaviorSubject(value)); }\n  }\n}\n","import { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Information } from '../../data/information/information';\nimport { InformationRepository } from '../../data/information/information-repository.service';\nimport { Proof } from '../../data/proof/proof';\n\nexport abstract class InformationProvider {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly informationRepository: InformationRepository\n  ) { }\n\n  collectAndStore$(proof: Proof) {\n    return this.provide$(proof).pipe(\n      switchMap(information => this.informationRepository.add$(...information))\n    );\n  }\n\n  protected abstract provide$(proof: Proof): Observable<Information[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { first, map } from 'rxjs/operators';\nimport { Information } from '../data/information/information';\nimport { InformationRepository } from '../data/information/information-repository.service';\nimport { Proof } from '../data/proof/proof';\n\ntype EssentialInformation = Pick<Information, 'provider' | 'name' | 'value'>;\n\ninterface SortedProofInformation {\n  readonly proof: Proof;\n  readonly information: EssentialInformation[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerializationService {\n\n  constructor(\n    private readonly informationRepository: InformationRepository\n  ) { }\n\n  stringify$(proof: Proof) {\n    return this.createSortedProofInformation$(proof).pipe(\n      map(sortedProofInformation => JSON.stringify(sortedProofInformation))\n    );\n  }\n\n  private createSortedProofInformation$(proof: Proof) {\n    return this.informationRepository.getByProof$(proof).pipe(\n      first(),\n      map(informationList => {\n        const sortedInformation = informationList.sort((a: Information, b: Information) => {\n          const providerCompared = a.provider.localeCompare(b.provider);\n          const nameCompared = a.name.localeCompare(b.name);\n          const valueCompared = a.value.localeCompare(b.value);\n          if (providerCompared !== 0) { return providerCompared; }\n          if (nameCompared !== 0) { return nameCompared; }\n          return valueCompared;\n        }).map(({ provider, name, value }) => ({ provider, name, value } as EssentialInformation));\n        return ({ proof, information: sortedInformation } as SortedProofInformation);\n      })\n    );\n  }\n}\n","import { forkJoin, Observable } from 'rxjs';\nimport { defaultIfEmpty, filter } from 'rxjs/operators';\n\nexport function isNonNullable<T>() {\n  return (source$: Observable<null | undefined | T>) => source$.pipe(\n    filter((v): v is NonNullable<T> => v !== null && v !== undefined)\n  );\n}\n\nexport function forkJoinWithDefault<T>(sources: Observable<T>[], defaultValue: T[] = []) {\n  return forkJoin(sources).pipe(\n    defaultIfEmpty(defaultValue)\n  );\n}\n","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"jDxf\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"37vE\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"cJxf\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"eGHz\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"fHjd\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"KwcL\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Signature } from './signature';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignatureRepository {\n\n  private readonly signatureStorage = new Storage<Signature>('signature');\n\n  getByProof$(proof: Proof) {\n    return this.signatureStorage.getAll$().pipe(\n      map(signatures => signatures.filter(info => info.proofHash === proof.hash))\n    );\n  }\n\n  add$(...signatures: Signature[]): Observable<Signature[]> {\n    return this.signatureStorage.add$(...signatures);\n  }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      switchMap(signatures => this.remove$(...signatures))\n    );\n  }\n\n  remove$(...signatures: Signature[]) {\n    return this.signatureStorage.remove$(...signatures);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { map } from 'rxjs/operators';\nimport { CameraService } from './services/camera/camera.service';\nimport { CollectorService } from './services/collector/collector.service';\nimport { CapacitorProvider } from './services/collector/information/capacitor-provider/capacitor-provider';\nimport { DefaultSignatureProvider } from './services/collector/signature/default-provider/default-provider';\nimport { InformationRepository } from './services/data/information/information-repository.service';\nimport { SignatureRepository } from './services/data/signature/signature-repository.service';\nimport { LanguageService } from './services/language/language.service';\nimport { NotificationService } from './services/notification/notification.service';\nimport { PublishersAlert } from './services/publisher/publishers-alert/publishers-alert.service';\nimport { SamplePublisher } from './services/publisher/sample-publisher/sample-publisher';\nimport { SerializationService } from './services/serialization/serialization.service';\nimport { fromExtension } from './utils/mime-type';\n\nconst { SplashScreen } = Plugins;\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private readonly platform: Platform,\n    private readonly collectorService: CollectorService,\n    private readonly publishersAlert: PublishersAlert,\n    private readonly serializationService: SerializationService,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository,\n    private readonly translocoService: TranslocoService,\n    private readonly notificationService: NotificationService,\n    langaugeService: LanguageService,\n    private readonly cameraService: CameraService\n  ) {\n    this.restoreAppStatus();\n    this.initializeApp();\n    this.initializeCollector();\n    this.initializePublisher();\n    langaugeService.initialize$().pipe(untilDestroyed(this)).subscribe();\n  }\n\n  restoreAppStatus() {\n    this.cameraService.restoreKilledAppResult$().pipe(\n      map(cameraPhoto => this.collectorService.storeAndCollect(\n        cameraPhoto.base64String,\n        fromExtension(cameraPhoto.format)\n      )),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      SplashScreen.hide();\n    });\n  }\n\n  initializeCollector() {\n    DefaultSignatureProvider.initialize$().pipe(untilDestroyed(this)).subscribe();\n    this.collectorService.addInformationProvider(\n      new CapacitorProvider(this.informationRepository, this.translocoService)\n    );\n    this.collectorService.addSignatureProvider(\n      new DefaultSignatureProvider(this.signatureRepository, this.serializationService)\n    );\n  }\n\n  initializePublisher() {\n    this.publishersAlert.addPublisher(\n      new SamplePublisher(this.translocoService, this.notificationService)\n    );\n  }\n}\n","import { Plugins } from '@capacitor/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer, Observable, of, zip } from 'rxjs';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Importance, Information, InformationType } from 'src/app/services/data/information/information';\nimport { InformationRepository } from 'src/app/services/data/information/information-repository.service';\nimport { Proof } from 'src/app/services/data/proof/proof';\nimport { PreferenceManager } from 'src/app/utils/preferences/preference-manager';\nimport { InformationProvider } from '../information-provider';\n\nconst { Device, Geolocation } = Plugins;\n\nconst preferences = PreferenceManager.DEFAULT_INFORMATION_PROVIDER_PREF;\nconst enum PrefKeys {\n  CollectDeviceInfo = 'collectDeviceInfo',\n  CollectLocationInfo = 'collectLocationInfo'\n}\n\nexport class CapacitorProvider extends InformationProvider {\n\n  readonly name = 'Capacitor';\n\n  constructor(\n    informationRepository: InformationRepository,\n    private readonly translocoService: TranslocoService\n  ) {\n    super(informationRepository);\n  }\n\n  static isDeviceInfoCollectionEnabled$() {\n    return preferences.getBoolean$(PrefKeys.CollectDeviceInfo, true);\n  }\n\n  static setDeviceInfoCollection$(enable: boolean) {\n    return preferences.setBoolean$(PrefKeys.CollectDeviceInfo, enable);\n  }\n\n  static isLocationInfoCollectionEnabled$() {\n    return preferences.getBoolean$(PrefKeys.CollectLocationInfo, true);\n  }\n\n  static setLocationInfoCollection$(enable: boolean) {\n    return preferences.setBoolean$(PrefKeys.CollectLocationInfo, enable);\n  }\n\n  protected provide$(proof: Proof): Observable<Information[]> {\n    return zip(\n      CapacitorProvider.isDeviceInfoCollectionEnabled$(),\n      CapacitorProvider.isLocationInfoCollectionEnabled$()\n    ).pipe(\n      first(),\n      switchMap(([isDeviceInfoCollectionEnabled, isLocationInfoCollectionEnabled]) => zip(\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getInfo()) : of(undefined),\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getBatteryInfo()) : of(undefined),\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getLanguageCode()) : of(undefined),\n        isLocationInfoCollectionEnabled ? defer(() => Geolocation.getCurrentPosition({\n          enableHighAccuracy: true,\n          maximumAge: 10 * 60 * 1000,\n          timeout: 10 * 1000\n        })) : of(undefined))),\n      map(([deviceInfo, batteryInfo, languageCode, geolocationPosition]) => {\n        const informationList: Information[] = [];\n        if (deviceInfo !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('uuid'),\n            value: String(deviceInfo.uuid),\n            importance: Importance.High,\n            type: InformationType.Other\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceName'),\n            value: String(deviceInfo.name),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceModel'),\n            value: String(deviceInfo.model),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('devicePlatform'),\n            value: String(deviceInfo.platform),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('appVersion'),\n            value: String(deviceInfo.appVersion),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('appVersionCode'),\n            value: String(deviceInfo.appBuild),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('operatingSystem'),\n            value: String(deviceInfo.operatingSystem),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('osVersion'),\n            value: String(deviceInfo.osVersion),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceManufacturer'),\n            value: String(deviceInfo.manufacturer),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('runningOnVm'),\n            value: String(deviceInfo.isVirtual),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('usedMemory'),\n            value: String(deviceInfo.memUsed),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('freeDiskSpace'),\n            value: String(deviceInfo.diskFree),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('totalDiskSpace'),\n            value: String(deviceInfo.diskTotal),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (batteryInfo !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('batteryLevel'),\n            value: String(batteryInfo.batteryLevel),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('batteryCharging'),\n            value: String(batteryInfo.isCharging),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (languageCode !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceLanguageCode'),\n            value: String(languageCode.value),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (geolocationPosition !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('location'),\n            value: `(${geolocationPosition.coords.latitude}, ${geolocationPosition.coords.longitude})`,\n            importance: Importance.High,\n            type: InformationType.Location\n          });\n        }\n        return informationList;\n      })\n    );\n  }\n}\n","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\";","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TranslocoRootModule } from './transloco/transloco-root.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslocoRootModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Translation, translocoConfig, TranslocoLoader, TranslocoModule, TRANSLOCO_CONFIG, TRANSLOCO_LOADER } from '@ngneat/transloco';\nimport { environment } from '../../environments/environment';\n\nexport const languages: { [key: string]: string; } = {\n  'en-us': 'English (United State)',\n  'zh-tw': '繁體中文（台灣）'\n};\n\nexport const defaultLanguage = Object.entries(languages)[0];\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private readonly http: HttpClient) { }\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`./assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: Object.keys(languages),\n        defaultLang: defaultLanguage[0],\n        fallbackLang: defaultLanguage[0],\n        missingHandler: { useFallbackTranslation: true },\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule { }\n","import { Injectable } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { EMPTY } from 'rxjs';\nimport { catchError, map, pluck, switchMap, switchMapTo, tap } from 'rxjs/operators';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\nimport { fileNameWithoutExtension } from 'src/app/utils/file/file';\nimport { MimeType } from 'src/app/utils/mime-type';\nimport { forkJoinWithDefault } from 'src/app/utils/rx-operators';\nimport { Proof } from '../data/proof/proof';\nimport { ProofRepository } from '../data/proof/proof-repository.service';\nimport { NotificationService } from '../notification/notification.service';\nimport { InformationProvider } from './information/information-provider';\nimport { SignatureProvider } from './signature/signature-provider';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectorService {\n\n  private readonly informationProviders = new Set<InformationProvider>();\n  private readonly signatureProviders = new Set<SignatureProvider>();\n\n  constructor(\n    private readonly proofRepository: ProofRepository,\n    private readonly notificationService: NotificationService,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  storeAndCollect(rawBase64: string, mimeType: MimeType) {\n    // Deliberately store proof and its media file in the foreground, so the app page can\n    // correctly and continuously subscribe the Storage.getAll$().\n    this.store$(rawBase64, mimeType).subscribe(proof => {\n      subscribeInBackground(this.collectAndSign$(proof));\n    });\n  }\n\n  private store$(rawBase64: string, mimeType: MimeType) {\n    return this.proofRepository.saveRawFile$(rawBase64, mimeType).pipe(\n      // Get the proof hash from the uri.\n      map(uri => fileNameWithoutExtension(uri)),\n      // Store the media file.\n      switchMap(hash => this.proofRepository.add$({ hash, mimeType, timestamp: Date.now() })),\n      pluck(0)\n    );\n  }\n\n  private collectAndSign$(proof: Proof) {\n    const notificationId = this.notificationService.createNotificationId();\n    this.notificationService.notify(\n      notificationId,\n      this.translocoService.translate('collectingProof'),\n      this.translocoService.translate('collectingInformation')\n    );\n    return forkJoinWithDefault([...this.informationProviders].map(provider => provider.collectAndStore$(proof))).pipe(\n      tap(_ => this.notificationService.notify(\n        notificationId,\n        this.translocoService.translate('collectingProof'),\n        this.translocoService.translate('signingProof')\n      )),\n      switchMapTo(forkJoinWithDefault([...this.signatureProviders].map(provider => provider.signAndStore$(proof)))),\n      tap(_ => this.notificationService.cancel(notificationId)),\n      catchError(error => {\n        this.notificationService.notifyError(notificationId, error);\n        return EMPTY;\n      })\n    );\n  }\n\n  addInformationProvider(...providers: InformationProvider[]) {\n    providers.forEach(provider => this.informationProviders.add(provider));\n  }\n\n  removeInformationProvider(...providers: InformationProvider[]) {\n    providers.forEach(provider => this.informationProviders.delete(provider));\n  }\n\n  addSignatureProvider(...providers: SignatureProvider[]) {\n    providers.forEach(provider => this.signatureProviders.add(provider));\n  }\n\n  removeSignatureProvider(...providers: SignatureProvider[]) {\n    providers.forEach(provider => this.signatureProviders.delete(provider));\n  }\n}\n","import { defer, Subject } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nexport function base64ToArrayBuffer(base64: string) {\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport function arrayBufferToBase64(arrayBuffer: ArrayBuffer) {\n  return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n}\n\nexport function arrayBufferToHex(arrayBuffer: ArrayBuffer) {\n  return [...new Uint8Array(arrayBuffer)]\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\nexport function hexToArrayBuffer(hex: string) {\n  // tslint:disable-next-line: no-non-null-assertion\n  return new Uint8Array(hex.match(/[\\da-f]{2}/gi)!.map(h => parseInt(h, 16))).buffer;\n}\n\nexport function stringToArrayBuffer(str: string) {\n  return textEncoder.encode(str).buffer;\n}\n\nexport function arrayBufferToString(arrayBuffer: ArrayBuffer) {\n  return textDecoder.decode(arrayBuffer);\n}\n\nexport function base64ToBlob$(base64: string) {\n  return defer(() => fetch(base64)).pipe(\n    first(),\n    switchMap(res => res.blob())\n  );\n}\n\nexport function blobToBase64$(blob: Blob) {\n  const fileReader = new FileReader();\n  const subject$ = new Subject<string>();\n  fileReader.onloadend = () => {\n    subject$.next(fileReader.result as string);\n    subject$.complete();\n  };\n  fileReader.readAsDataURL(blob);\n  return subject$.asObservable();\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { concatMap, concatMapTo, first, map, switchMap } from 'rxjs/operators';\nimport { isNonNullable } from 'src/app/utils/rx-operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Caption } from './caption';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaptionRepository {\n\n  private readonly captionStorage = new Storage<Caption>('caption');\n\n  getByProof$(proof: Proof) {\n    return this.captionStorage.getAll$().pipe(\n      map(captions => captions.find(caption => caption.proofHash === proof.hash))\n    );\n  }\n\n  addOrEdit$(value: Caption) {\n    return this.captionStorage.getAll$().pipe(\n      first(),\n      map(captions => captions.find(caption => caption.proofHash === value.proofHash)),\n      concatMap(found => {\n        if (found) { return this.remove$(found); }\n        return of(found);\n      }),\n      concatMapTo(this.captionStorage.add$(value))\n    );\n  }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      isNonNullable(),\n      switchMap(caption => this.remove$(caption))\n    );\n  }\n\n  remove$(...captions: Caption[]) {\n    return this.captionStorage.remove$(...captions);\n  }\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer } from 'rxjs';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\n\nconst { LocalNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private currentId = 1;\n\n  constructor(\n    private readonly translocoService: TranslocoService\n  ) {\n    LocalNotifications.requestPermission()\n      .then(result => console.log(`Notification permission request result: ${result.granted}`));\n  }\n\n  createNotificationId() {\n    this.currentId++;\n    return this.currentId;\n  }\n\n  // TODO: Add on-going configurations when this PR got merged and released:\n  //       https://github.com/ionic-team/capacitor/pull/3165\n  notify(id: number, title: string, body: string) {\n    console.log(`${title}: ${body}`);\n    subscribeInBackground(defer(() => LocalNotifications.schedule({\n      notifications: [{ title, body, id }]\n    })));\n  }\n\n  notifyError(id: number, error: Error) {\n    this.notify(id, this.translocoService.translate('unknownError'), JSON.stringify(error));\n  }\n\n  cancel(id: number) {\n    subscribeInBackground(defer(() => LocalNotifications.cancel({ notifications: [{ id: String(id) }] })));\n  }\n}\n","import { Capacitor, Plugins } from '@capacitor/core';\nimport { Observable } from 'rxjs';\n\nconst { BackgroundTask } = Plugins;\n\nexport function subscribeInBackground(\n  work$: Observable<any>,\n  error?: (error: any) => void,\n  complete?: () => void\n) {\n  if (Capacitor.isPluginAvailable('BackgroundTask')) {\n    const taskId = BackgroundTask.beforeExit(() => {\n      work$.subscribe(_ => BackgroundTask.finish({ taskId }), error, complete);\n    });\n  } else {\n    work$.subscribe(_ => _, error, complete);\n  }\n}\n","import { FilesystemDirectory, FilesystemEncoding, Plugins } from '@capacitor/core';\nimport { BehaviorSubject, defer, from, Observable, of } from 'rxjs';\nimport { catchError, concatMap, concatMapTo, map, mapTo, pluck, tap, toArray } from 'rxjs/operators';\nimport { sha256$ } from '../crypto/crypto';\nimport { forkJoinWithDefault } from '../rx-operators';\n\nconst { Filesystem } = Plugins;\n\nexport class Storage<T extends object> {\n\n  constructor(\n    readonly name: string,\n    readonly directory: FilesystemDirectory = FilesystemDirectory.Data\n  ) { }\n\n  private readonly tuples$ = new BehaviorSubject<T[]>([]);\n  private hasInitialized = false;\n\n  private checkInitialization$() {\n    return defer(() => {\n      if (this.hasInitialized) { return of(void 0); }\n      else { return this.refresh$(); }\n    });\n  }\n\n  private refresh$() {\n    return of(void 0).pipe(\n      tap(_ => this.hasInitialized = true),\n      concatMapTo(this.makeNameDir$()),\n      concatMapTo(this.readNameDir$()),\n      pluck('files'),\n      concatMap(fileNames => from(fileNames)),\n      concatMap(fileName => this.readFile$(fileName)),\n      map(result => JSON.parse(result.data) as T),\n      toArray(),\n      tap(tuples => this.tuples$.next(tuples))\n    );\n  }\n\n  private makeNameDir$(): Observable<void> {\n    return defer(() => Filesystem.mkdir({\n      path: this.name,\n      directory: this.directory,\n      recursive: true\n    })).pipe(\n      mapTo(void 0),\n      catchError((err: Error) => {\n        console.log(`${this.directory}/${this.name}: ${err.message}`);\n        return of(void 0);\n      })\n    );\n  }\n\n  private readNameDir$() {\n    return defer(() => Filesystem.readdir({\n      path: this.name,\n      directory: this.directory\n    }));\n  }\n\n  private readFile$(fileName: string) {\n    return defer(() => Filesystem.readFile({\n      path: `${this.name}/${fileName}`,\n      directory: this.directory,\n      encoding: FilesystemEncoding.UTF8\n    }));\n  }\n\n  getAll$() {\n    return this.checkInitialization$().pipe(\n      concatMapTo(this.tuples$.asObservable())\n    );\n  }\n\n  add$(...tuples: T[]) {\n    return forkJoinWithDefault(tuples.map(tuple => this.saveFile$(tuple))).pipe(\n      concatMapTo(this.checkInitialization$()),\n      tap(_ => this.tuples$.next([...this.tuples$.value, ...tuples])),\n      mapTo(tuples)\n    );\n  }\n\n  private saveFile$(tuple: T) {\n    // XXX: Use sha256 is not a good idea as `sha256$()` uses `JSON.stringify()` under the hood.\n    //      Thus, the order of the tuple (properties) will result in different hash if tuple is\n    //      an array (object).\n    return sha256$(tuple).pipe(\n      concatMap(hash => Filesystem.writeFile({\n        path: `${this.name}/${hash}.json`,\n        data: JSON.stringify(tuple),\n        directory: this.directory,\n        encoding: FilesystemEncoding.UTF8,\n        recursive: true\n      })));\n  }\n\n  remove$(...tuples: T[]) {\n    return forkJoinWithDefault(tuples.map(tuple => this.deleteFile$(tuple))).pipe(\n      concatMapTo(this.refresh$()),\n      mapTo(tuples)\n    );\n  }\n\n  private deleteFile$(tuple: T) {\n    // XXX: Use sha256 is not a good idea as `sha256$()` uses `JSON.stringify()` under the hood.\n    //      Thus, the order of the tuple (properties) will result in different hash if tuple is\n    //      an array (object).\n    return sha256$(tuple).pipe(\n      concatMap(hash => Filesystem.deleteFile({\n        path: `${this.name}/${hash}.json`,\n        directory: this.directory\n      })));\n  }\n}\n","import { Preferences } from './preferences';\n\nconst enum RepositoryName {\n  Language = 'language',\n  DefaultInformationProvider = 'defaultInformationProvider',\n  DefaultSignatureProvider = 'defaultSignatureProvider'\n}\n\nexport class PreferenceManager {\n\n  static readonly LANGUAGE_PREF = new Preferences(RepositoryName.Language);\n  static readonly DEFAULT_INFORMATION_PROVIDER_PREF = new Preferences(RepositoryName.DefaultInformationProvider);\n  static readonly DEFAULT_SIGNATURE_PROVIDER_PREF = new Preferences(RepositoryName.DefaultSignatureProvider);\n}\n","import { defer, of, zip } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { arrayBufferToHex, base64ToArrayBuffer, hexToArrayBuffer, stringToArrayBuffer } from '../encoding/encoding';\n\nconst subtle = crypto.subtle;\nconst SHA_256 = 'SHA-256';\nconst ECDSA = 'ECDSA';\nconst SECP256R1 = 'P-256';\nconst enum Usage {\n  Sign = 'sign',\n  Verify = 'verify'\n}\nconst enum Format {\n  PKCS8 = 'pkcs8',\n  SubjectPublicKeyInfo = 'spki'\n}\n\ninterface KeyPair {\n  publicKey: string;\n  privateKey: string;\n}\n\n/**\n * Use SHA-256 to hash the object.\n * @param object The target object. Note that the order of the object properties is sensitive.\n */\nexport function sha256$<T extends object>(object: T) {\n  return of(JSON.stringify(object)).pipe(\n    switchMap(json => sha256WithString$(json))\n  );\n}\n\nexport function sha256WithString$(str: string) {\n  return of(new TextEncoder().encode(str).buffer).pipe(\n    switchMap(arrayBuffer => subtle.digest(SHA_256, arrayBuffer)),\n    map(digested => arrayBufferToHex(digested))\n  );\n}\n\nexport function sha256WithBase64$(base64: string) {\n  return of(base64ToArrayBuffer(base64)).pipe(\n    switchMap(arrayBuffer => subtle.digest(SHA_256, arrayBuffer)),\n    map(digested => arrayBufferToHex(digested))\n  );\n}\n\nexport function createEcKeyPair$() {\n  return defer(() => subtle.generateKey(\n    {\n      name: ECDSA,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Sign, Usage.Verify]\n  )).pipe(\n    switchMap(({ publicKey, privateKey }) => zip(exportEcdsaPublicKey$(publicKey), exportEcdsaPrivateKey$(privateKey))),\n    map(([publicKey, privateKey]) => ({ publicKey, privateKey } as KeyPair))\n  );\n}\n\nexport function signWithSha256AndEcdsa$(message: string, privateKeyHex: string) {\n  return importEcdsaPrivateKey$(privateKeyHex).pipe(\n    switchMap(key => subtle.sign({ name: ECDSA, hash: SHA_256 }, key, stringToArrayBuffer(message))),\n    map(signature => arrayBufferToHex(signature))\n  );\n}\n\nexport function verifyWithSha256AndEcdsa$(message: string, signatureHex: string, publicKeyHex: string) {\n  return importEcdsaPublicKey$(publicKeyHex).pipe(\n    switchMap(key => subtle.verify(\n      { name: ECDSA, hash: SHA_256 },\n      key,\n      hexToArrayBuffer(signatureHex),\n      stringToArrayBuffer(message)\n    ))\n  );\n}\n\nfunction exportEcdsaPublicKey$(key: CryptoKey) {\n  return defer(() => subtle.exportKey(Format.SubjectPublicKeyInfo, key)).pipe(\n    map(arrayBuffer => arrayBufferToHex(arrayBuffer))\n  );\n}\n\nfunction exportEcdsaPrivateKey$(key: CryptoKey) {\n  return defer(() => subtle.exportKey(Format.PKCS8, key)).pipe(\n    map(arrayBuffer => arrayBufferToHex(arrayBuffer))\n  );\n}\n\nfunction importEcdsaPublicKey$(keyHex: string) {\n  return defer(() => subtle.importKey(\n    Format.SubjectPublicKeyInfo,\n    hexToArrayBuffer(keyHex),\n    {\n      name: ECDSA,\n      hash: SHA_256,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Verify]\n  ));\n}\n\nfunction importEcdsaPrivateKey$(keyHex: string) {\n  return defer(() => subtle.importKey(\n    Format.PKCS8,\n    hexToArrayBuffer(keyHex),\n    {\n      name: ECDSA,\n      hash: SHA_256,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Sign]\n  ));\n}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: 'storage',\n  pathMatch: 'full'\n},\n{\n  path: 'storage',\n  loadChildren: () => import('./pages/storage/storage.module').then(m => m.StoragePageModule)\n},\n{\n  path: 'settings',\n  loadChildren: () => import('./pages/settings/settings.module').then(m => m.SettingsPageModule)\n}, {\n  path: 'proof',\n  loadChildren: () => import('./pages/proof/proof.module').then(m => m.ProofPageModule)\n}, {\n  path: 'information',\n  loadChildren: () => import('./pages/information/information.module').then(m => m.InformationPageModule)\n}, {\n  path: 'general',\n  loadChildren: () => import('./pages/general/general.module').then(m => m.GeneralPageModule)\n}, {\n  path: 'defaultinformationprovider',\n  // tslint:disable-next-line: max-line-length\n  loadChildren: () => import('./pages/defaultinformationprovider/defaultinformationprovider.module').then(m => m.DefaultInformationProviderPageModule)\n}, {\n  path: 'defaultsignature',\n  loadChildren: () => import('./pages/defaultsignature/defaultsignature.module').then(m => m.DefaultSignaturePageModule)\n}, {\n  path: 'about',\n  loadChildren: () => import('./pages/about/about.module').then(m => m.AboutPageModule)\n}];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'corrected'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { TranslocoService } from '@ngneat/transloco';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\nimport { Proof } from '../data/proof/proof';\nimport { NotificationService } from '../notification/notification.service';\n\nexport abstract class Publisher {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly translocoService: TranslocoService,\n    private readonly notificationService: NotificationService\n  ) { }\n\n  publish(proof: Proof) {\n    const notificationId = this.notificationService.createNotificationId();\n    this.notificationService.notify(\n      notificationId,\n      this.translocoService.translate('publishingProof'),\n      this.translocoService.translate('message.publishingProof', { hash: proof.hash, publisherName: this.name })\n    );\n    subscribeInBackground(\n      this.run$(proof).pipe(\n        tap(_ => this.notificationService.notify(\n          notificationId,\n          this.translocoService.translate('proofPublished'),\n          this.translocoService.translate('message.proofPublished', { hash: proof.hash, publisherName: this.name })\n        ))\n      ),\n      error => this.notificationService.notifyError(notificationId, error)\n    );\n  }\n\n  abstract isEnabled$(): Observable<boolean>;\n\n  protected abstract run$(proof: Proof): Observable<void>;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { FilesystemDirectory, Plugins } from '@capacitor/core';\nimport { defer, zip } from 'rxjs';\nimport { map, pluck, switchMap, switchMapTo } from 'rxjs/operators';\nimport { sha256WithBase64$ } from 'src/app/utils/crypto/crypto';\nimport { base64ToBlob$, blobToBase64$ } from 'src/app/utils/encoding/encoding';\nimport { getExtension, MimeType } from 'src/app/utils/mime-type';\nimport { forkJoinWithDefault } from 'src/app/utils/rx-operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { CaptionRepository } from '../caption/caption-repository.service';\nimport { InformationRepository } from '../information/information-repository.service';\nimport { SignatureRepository } from '../signature/signature-repository.service';\nimport { Proof } from './proof';\n\nconst { Filesystem } = Plugins;\n// @ts-ignore\nconst ImageBlobReduce = require('image-blob-reduce')();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProofRepository {\n\n  private readonly proofStorage = new Storage<Proof>('proof');\n  private readonly rawFileDir = FilesystemDirectory.Data;\n  private readonly rawFileFolderName = 'raw';\n  private readonly thumbnailFileDir = FilesystemDirectory.Data;\n  private readonly thumbnailFileFolderName = 'thumb';\n  private readonly thumbnailSize = 200;\n\n  constructor(\n    private readonly captionRepository: CaptionRepository,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository\n  ) { }\n\n  getAll$() { return this.proofStorage.getAll$(); }\n\n  getByHash$(hash: string) {\n    return this.getAll$().pipe(\n      map(proofList => proofList.find(proof => proof.hash === hash))\n    );\n  }\n\n  add$(...proofs: Proof[]) { return this.proofStorage.add$(...proofs); }\n\n  remove$(...proofs: Proof[]) {\n    return this.proofStorage.remove$(...proofs).pipe(\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.deleteRawFile$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.captionRepository.removeByProof$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.informationRepository.removeByProof$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.signatureRepository.removeByProof$(proof))))\n    );\n  }\n\n  getRawFile$(proof: Proof) {\n    return defer(() => Filesystem.readFile({\n      path: `${this.rawFileFolderName}/${proof.hash}.${getExtension(proof.mimeType)}`,\n      directory: this.rawFileDir\n    })).pipe(pluck('data'));\n  }\n\n  /**\n   * Copy [rawBase64] to add raw file to internal storage.\n   * @param rawBase64 The original source of raw file which will be copied.\n   * @param mimeType The file added in the internal storage. The name of the returned file will be its hash with original extension.\n   */\n  saveRawFile$(rawBase64: string, mimeType: MimeType) {\n    return zip(\n      this._saveRawFile$(rawBase64, mimeType),\n      this.generateAndSaveThumbnailFile$(rawBase64, mimeType)\n    ).pipe(\n      map(([rawUri, _]) => rawUri)\n    );\n  }\n\n  private _saveRawFile$(rawBase64: string, mimeType: MimeType) {\n    return sha256WithBase64$(rawBase64).pipe(\n      switchMap(hash => Filesystem.writeFile({\n        path: `${this.rawFileFolderName}/${hash}.${getExtension(mimeType)}`,\n        data: rawBase64,\n        directory: this.rawFileDir,\n        recursive: true\n      })),\n      pluck('uri')\n    );\n  }\n\n  private deleteRawFile$(proof: Proof) {\n    return defer(() => Filesystem.deleteFile({\n      path: `${this.rawFileFolderName}/${proof.hash}.${getExtension(proof.mimeType)}`,\n      directory: this.rawFileDir\n    }));\n  }\n\n  getThumbnail$(proof: Proof) {\n    return defer(() => Filesystem.readFile({\n      path: `${this.thumbnailFileFolderName}/${proof.hash}.${getExtension(proof.mimeType)}`,\n      directory: this.thumbnailFileDir\n    })).pipe(pluck('data'));\n  }\n\n  private generateAndSaveThumbnailFile$(rawBase64: string, mimeType: MimeType) {\n    return base64ToBlob$(`data:${mimeType};base64,${rawBase64}`).pipe(\n      switchMap(rawImageBlob => ImageBlobReduce.toBlob(rawImageBlob, { max: this.thumbnailSize })),\n      switchMap(thumbnailBlob => zip(blobToBase64$(thumbnailBlob as Blob), sha256WithBase64$(rawBase64))),\n      switchMap(([thumbnailBase64, hash]) => Filesystem.writeFile({\n        path: `${this.thumbnailFileFolderName}/${hash}.${getExtension(mimeType)}`,\n        data: thumbnailBase64,\n        directory: this.thumbnailFileDir,\n        recursive: true\n      })),\n      pluck('uri')\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\ndefineCustomElements(window);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}