{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/collector/collector.service.ts","webpack:///src/app/services/collector/information/capacitor-provider/capacitor-provider.ts","webpack:///src/app/services/collector/information/information-provider.ts","webpack:///src/app/services/collector/signature/default-provider/default-provider.ts","webpack:///src/app/services/collector/signature/signature-provider.ts","webpack:///src/app/services/data/caption/caption-repository.service.ts","webpack:///src/app/services/data/information/information-repository.service.ts","webpack:///src/app/services/data/proof/proof-repository.service.ts","webpack:///src/app/services/data/signature/signature-repository.service.ts","webpack:///src/app/services/language/language.service.ts","webpack:///src/app/services/notification/notification.service.ts","webpack:///src/app/services/publisher/publisher.ts","webpack:///src/app/services/publisher/publishers-alert/publishers-alert.service.ts","webpack:///src/app/services/publisher/sample-publisher/sample-publisher.ts","webpack:///src/app/services/serialization/serialization.service.ts","webpack:///src/app/transloco/transloco-root.module.ts","webpack:///src/app/utils/background-task/background-task.ts","webpack:///src/app/utils/crypto/crypto.ts","webpack:///src/app/utils/encoding/encoding.ts","webpack:///src/app/utils/file/file.ts","webpack:///src/app/utils/mime-type.ts","webpack:///src/app/utils/preferences/preference-manager.ts","webpack:///src/app/utils/preferences/preferences.ts","webpack:///src/app/utils/rx-operators.ts","webpack:///src/app/utils/storage/storage.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","all","slice","webpackAsyncContextKeys","Object","routes","path","redirectTo","pathMatch","loadChildren","m","StoragePageModule","SettingsPageModule","ProofPageModule","InformationPageModule","AppRoutingModule","imports","forRoot","preloadingStrategy","relativeLinkResolution","SplashScreen","AppComponent","platform","collectorService","publishersAlert","serializationService","informationRepository","signatureRepository","translocoService","notificationService","langaugeService","initializeApp","initializeCollector","initializePublisher","initialize$","pipe","subscribe","ready","hide","addInformationProvider","addSignatureProvider","addPublisher","checkProperties","selector","template","AppModule","declarations","entryComponents","providers","provide","useClass","bootstrap","CollectorService","proofRepository","informationProviders","Set","signatureProviders","rawBase64","mimeType","store$","proof","collectAndSign$","saveRawFile$","uri","hash","add$","timestamp","Date","now","notificationId","createNotificationId","notify","translate","provider","collectAndStore$","_","signAndStore$","cancel","error","notifyError","forEach","add","providedIn","Device","Geolocation","preferences","DEFAULT_INFORMATION_PROVIDER_PREF","CapacitorProvider","name","isDeviceInfoCollectionEnabled$","isLocationInfoCollectionEnabled$","isDeviceInfoCollectionEnabled","isLocationInfoCollectionEnabled","getInfo","undefined","getBatteryInfo","getLanguageCode","getCurrentPosition","enableHighAccuracy","maximumAge","timeout","deviceInfo","batteryInfo","languageCode","geolocationPosition","informationList","push","proofHash","value","String","uuid","importance","type","model","appVersion","appBuild","operatingSystem","osVersion","manufacturer","isVirtual","memUsed","diskFree","diskTotal","batteryLevel","isCharging","coords","latitude","longitude","getBoolean$","enable","setBoolean$","InformationProvider","provide$","information","DEFAULT_SIGNATURE_PROVIDER_PREF","DefaultSignatureProvider","serialized","getPrivateKey$","privateKeyHex","signatureHex","getPublicKey$","publicKeyHex","signature","publicKey","privateKey","length","setString$","getString$","SignatureProvider","stringify$","CaptionRepository","captionStorage","refresh$","getAll$","captions","find","caption","found","remove$","getByProof$","InformationRepository","informationStorage","filter","info","Filesystem","ProofRepository","captionRepository","proofStorage","rawFileDir","Data","rawFileFolderName","proofList","proofs","deleteRawFile$","removeByProof$","readFile","directory","writeFile","data","recursive","deleteFile","SignatureRepository","signatureStorage","signatures","LANGUAGE_PREF","LanguageService","languages","defaultLanguage","currentLanguageKey$","setDefaultLang","key","setCurrentLanguage$","setActiveLang","LocalNotifications","NotificationService","currentId","requestPermission","result","console","log","granted","title","body","schedule","notifications","JSON","stringify","Publisher","publisherName","run$","PublishersAlert","alertController","publishers","publisher","getEnabledPublishers$","create","header","inputs","index","label","checked","buttons","text","role","handler","getPublisherByName","publish","alertElement","present","isEnabled$","isEnabled","SamplePublisher","SerializationService","createSortedProofInformation$","sortedProofInformation","sortedInformation","sort","a","b","providerCompared","localeCompare","nameCompared","valueCompared","entries","TranslocoHttpLoader","http","lang","get","TranslocoRootModule","useValue","availableLangs","defaultLang","fallbackLang","missingHandler","useFallbackTranslation","reRenderOnLangChange","prodMode","production","BackgroundTask","subscribeInBackground","work$","complete","isPluginAvailable","taskId","beforeExit","finish","subtle","crypto","SHA_256","ECDSA","SECP256R1","sha256$","object","json","sha256WithString$","str","TextEncoder","encode","buffer","arrayBuffer","digest","digested","sha256WithBase64$","base64","createEcKeyPair$","generateKey","namedCurve","exportEcdsaPublicKey$","exportEcdsaPrivateKey$","signWithSha256AndEcdsa$","message","importEcdsaPrivateKey$","sign","verifyWithSha256AndEcdsa$","importEcdsaPublicKey$","verify","exportKey","keyHex","importKey","textEncoder","textDecoder","TextDecoder","base64ToArrayBuffer","binaryString","atob","bytes","Uint8Array","i","charCodeAt","arrayBufferToBase64","btoa","fromCharCode","arrayBufferToHex","toString","padStart","join","hexToArrayBuffer","hex","match","h","parseInt","stringToArrayBuffer","arrayBufferToString","decode","fileNameWithoutExtension","getExtension","fromExtension","extension","TypeError","PreferenceManager","Storage","Preferences","subjects","Map","defaultValue","converter","parse","has","existed","_get$","asObservable","converted","updateSubjects","get$","v","Number","set","set$","next","isNonNullable","source$","forkJoinWithDefault","sources","tuples$","makeNameDir$","readNameDir$","fileNames","fileName","readFile$","tuples","mkdir","err","readdir","encoding","UTF8","tuple","saveFile$","deleteFile$","environment","bootstrapModule","window"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-action-sheet.entry.js\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal-instance.entry.js\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera-modal.entry.js\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-camera.entry.js\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/pwa-elements/dist/esm/pwa-toast.entry.js\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/pwa-elements/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\";","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: 'storage',\n  pathMatch: 'full'\n}, {\n  path: 'storage',\n  loadChildren: () => import('./pages/storage/storage.module').then(m => m.StoragePageModule)\n}, {\n  path: 'settings',\n  loadChildren: () => import('./pages/settings/settings.module').then(m => m.SettingsPageModule)\n}, {\n  path: 'proof',\n  loadChildren: () => import('./pages/proof/proof.module').then(m => m.ProofPageModule)\n}, {\n  path: 'information',\n  loadChildren: () => import('./pages/information/information.module').then(m => m.InformationPageModule)\n}];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'corrected'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { CollectorService } from './services/collector/collector.service';\nimport { CapacitorProvider } from './services/collector/information/capacitor-provider/capacitor-provider';\nimport { DefaultSignatureProvider } from './services/collector/signature/default-provider/default-provider';\nimport { InformationRepository } from './services/data/information/information-repository.service';\nimport { SignatureRepository } from './services/data/signature/signature-repository.service';\nimport { LanguageService } from './services/language/language.service';\nimport { NotificationService } from './services/notification/notification.service';\nimport { PublishersAlert } from './services/publisher/publishers-alert/publishers-alert.service';\nimport { SamplePublisher } from './services/publisher/sample-publisher/sample-publisher';\nimport { SerializationService } from './services/serialization/serialization.service';\n\nconst { SplashScreen } = Plugins;\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private readonly platform: Platform,\n    private readonly collectorService: CollectorService,\n    private readonly publishersAlert: PublishersAlert,\n    private readonly serializationService: SerializationService,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository,\n    private readonly translocoService: TranslocoService,\n    private readonly notificationService: NotificationService,\n    langaugeService: LanguageService\n  ) {\n    this.initializeApp();\n    this.initializeCollector();\n    this.initializePublisher();\n    langaugeService.initialize$().pipe(untilDestroyed(this)).subscribe();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      SplashScreen.hide();\n    });\n  }\n\n  initializeCollector() {\n    DefaultSignatureProvider.initialize$().pipe(untilDestroyed(this)).subscribe();\n    this.collectorService.addInformationProvider(\n      new CapacitorProvider(this.informationRepository, this.translocoService)\n    );\n    this.collectorService.addSignatureProvider(\n      new DefaultSignatureProvider(this.signatureRepository, this.serializationService)\n    );\n  }\n\n  initializePublisher() {\n    this.publishersAlert.addPublisher(\n      new SamplePublisher(this.translocoService, this.notificationService)\n    );\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TranslocoRootModule } from './transloco/transloco-root.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslocoRootModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { EMPTY } from 'rxjs';\nimport { catchError, map, pluck, switchMap, switchMapTo, tap } from 'rxjs/operators';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\nimport { fileNameWithoutExtension } from 'src/app/utils/file/file';\nimport { MimeType } from 'src/app/utils/mime-type';\nimport { forkJoinWithDefault } from 'src/app/utils/rx-operators';\nimport { Proof } from '../data/proof/proof';\nimport { ProofRepository } from '../data/proof/proof-repository.service';\nimport { NotificationService } from '../notification/notification.service';\nimport { InformationProvider } from './information/information-provider';\nimport { SignatureProvider } from './signature/signature-provider';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectorService {\n\n  private readonly informationProviders = new Set<InformationProvider>();\n  private readonly signatureProviders = new Set<SignatureProvider>();\n\n  constructor(\n    private readonly proofRepository: ProofRepository,\n    private readonly notificationService: NotificationService,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  storeAndCollect(rawBase64: string, mimeType: MimeType) {\n    // Deliberately store proof and its media file in the foreground, so the app page can\n    // correctly and continuously subscribe the Storage.getAll$().\n    this.store$(rawBase64, mimeType).subscribe(proof => {\n      subscribeInBackground(this.collectAndSign$(proof));\n    });\n  }\n\n  private store$(rawBase64: string, mimeType: MimeType) {\n    return this.proofRepository.saveRawFile$(rawBase64, mimeType).pipe(\n      // Get the proof hash from the uri.\n      map(uri => fileNameWithoutExtension(uri)),\n      // Store the media file.\n      switchMap(hash => this.proofRepository.add$({ hash, mimeType, timestamp: Date.now() })),\n      pluck(0)\n    );\n  }\n\n  private collectAndSign$(proof: Proof) {\n    const notificationId = this.notificationService.createNotificationId();\n    this.notificationService.notify(\n      notificationId,\n      this.translocoService.translate('collectingProof'),\n      this.translocoService.translate('collectingInformation')\n    );\n    return forkJoinWithDefault([...this.informationProviders].map(provider => provider.collectAndStore$(proof))).pipe(\n      tap(_ => this.notificationService.notify(\n        notificationId,\n        this.translocoService.translate('collectingProof'),\n        this.translocoService.translate('signingProof')\n      )),\n      switchMapTo(forkJoinWithDefault([...this.signatureProviders].map(provider => provider.signAndStore$(proof)))),\n      tap(_ => this.notificationService.cancel(notificationId)),\n      catchError(error => {\n        this.notificationService.notifyError(notificationId, error);\n        return EMPTY;\n      })\n    );\n  }\n\n  addInformationProvider(...providers: InformationProvider[]) {\n    providers.forEach(provider => this.informationProviders.add(provider));\n  }\n\n  removeInformationProvider(...providers: InformationProvider[]) {\n    providers.forEach(provider => this.informationProviders.delete(provider));\n  }\n\n  addSignatureProvider(...providers: SignatureProvider[]) {\n    providers.forEach(provider => this.signatureProviders.add(provider));\n  }\n\n  removeSignatureProvider(...providers: SignatureProvider[]) {\n    providers.forEach(provider => this.signatureProviders.delete(provider));\n  }\n}\n","import { Plugins } from '@capacitor/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer, Observable, of, zip } from 'rxjs';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Importance, Information, InformationType } from 'src/app/services/data/information/information';\nimport { InformationRepository } from 'src/app/services/data/information/information-repository.service';\nimport { Proof } from 'src/app/services/data/proof/proof';\nimport { PreferenceManager } from 'src/app/utils/preferences/preference-manager';\nimport { InformationProvider } from '../information-provider';\n\nconst { Device, Geolocation } = Plugins;\n\nconst preferences = PreferenceManager.DEFAULT_INFORMATION_PROVIDER_PREF;\nconst enum PrefKeys {\n  CollectDeviceInfo = 'collectDeviceInfo',\n  CollectLocationInfo = 'collectLocationInfo'\n}\n\nexport class CapacitorProvider extends InformationProvider {\n\n  readonly name = 'Capacitor';\n\n  constructor(\n    informationRepository: InformationRepository,\n    private readonly translocoService: TranslocoService\n  ) {\n    super(informationRepository);\n  }\n\n  static isDeviceInfoCollectionEnabled$() {\n    return preferences.getBoolean$(PrefKeys.CollectDeviceInfo, true);\n  }\n\n  static setDeviceInfoCollection$(enable: boolean) {\n    return preferences.setBoolean$(PrefKeys.CollectDeviceInfo, enable);\n  }\n\n  static isLocationInfoCollectionEnabled$() {\n    return preferences.getBoolean$(PrefKeys.CollectLocationInfo, true);\n  }\n\n  static setLocationInfoCollection$(enable: boolean) {\n    return preferences.setBoolean$(PrefKeys.CollectLocationInfo, enable);\n  }\n\n  protected provide$(proof: Proof): Observable<Information[]> {\n    return zip(\n      CapacitorProvider.isDeviceInfoCollectionEnabled$(),\n      CapacitorProvider.isLocationInfoCollectionEnabled$()\n    ).pipe(\n      first(),\n      switchMap(([isDeviceInfoCollectionEnabled, isLocationInfoCollectionEnabled]) => zip(\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getInfo()) : of(undefined),\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getBatteryInfo()) : of(undefined),\n        isDeviceInfoCollectionEnabled ? defer(() => Device.getLanguageCode()) : of(undefined),\n        isLocationInfoCollectionEnabled ? defer(() => Geolocation.getCurrentPosition({\n          enableHighAccuracy: true,\n          maximumAge: 10 * 60 * 1000,\n          timeout: 10 * 1000\n        })) : of(undefined))),\n      map(([deviceInfo, batteryInfo, languageCode, geolocationPosition]) => {\n        const informationList: Information[] = [];\n        if (deviceInfo !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('uuid'),\n            value: String(deviceInfo.uuid),\n            importance: Importance.High,\n            type: InformationType.Other\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceName'),\n            value: String(deviceInfo.name),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceModel'),\n            value: String(deviceInfo.model),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('devicePlatform'),\n            value: String(deviceInfo.platform),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('appVersion'),\n            value: String(deviceInfo.appVersion),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('appVersionCode'),\n            value: String(deviceInfo.appBuild),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('operatingSystem'),\n            value: String(deviceInfo.operatingSystem),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('osVersion'),\n            value: String(deviceInfo.osVersion),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceManufacturer'),\n            value: String(deviceInfo.manufacturer),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('runningOnVm'),\n            value: String(deviceInfo.isVirtual),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('usedMemory'),\n            value: String(deviceInfo.memUsed),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('freeDiskSpace'),\n            value: String(deviceInfo.diskFree),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('totalDiskSpace'),\n            value: String(deviceInfo.diskTotal),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (batteryInfo !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('batteryLevel'),\n            value: String(batteryInfo.batteryLevel),\n            importance: Importance.Low,\n            type: InformationType.Device\n          }, {\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('batteryCharging'),\n            value: String(batteryInfo.isCharging),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (languageCode !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('deviceLanguageCode'),\n            value: String(languageCode.value),\n            importance: Importance.Low,\n            type: InformationType.Device\n          });\n        }\n        if (geolocationPosition !== undefined) {\n          informationList.push({\n            proofHash: proof.hash,\n            provider: this.name,\n            name: this.translocoService.translate('location'),\n            value: `(${geolocationPosition.coords.latitude}, ${geolocationPosition.coords.longitude})`,\n            importance: Importance.High,\n            type: InformationType.Location\n          });\n        }\n        return informationList;\n      })\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Information } from '../../data/information/information';\nimport { InformationRepository } from '../../data/information/information-repository.service';\nimport { Proof } from '../../data/proof/proof';\n\nexport abstract class InformationProvider {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly informationRepository: InformationRepository\n  ) { }\n\n  collectAndStore$(proof: Proof) {\n    return this.provide$(proof).pipe(\n      switchMap(information => this.informationRepository.add$(...information))\n    );\n  }\n\n  protected abstract provide$(proof: Proof): Observable<Information[]>;\n}\n","import { Observable, of, zip } from 'rxjs';\nimport { filter, first, map, switchMap, switchMapTo } from 'rxjs/operators';\nimport { Proof } from 'src/app/services/data/proof/proof';\nimport { Signature } from 'src/app/services/data/signature/signature';\nimport { createEcKeyPair$, signWithSha256AndEcdsa$ } from 'src/app/utils/crypto/crypto';\nimport { PreferenceManager } from 'src/app/utils/preferences/preference-manager';\nimport { SignatureProvider } from '../signature-provider';\n\nconst preferences = PreferenceManager.DEFAULT_SIGNATURE_PROVIDER_PREF;\nconst enum PrefKeys {\n  PublicKey = 'publicKey',\n  PrivateKey = 'privateKey'\n}\n\nexport class DefaultSignatureProvider extends SignatureProvider {\n\n  readonly name = 'Web Crypto API';\n\n  static initialize$() {\n    return zip(\n      this.getPublicKey$(),\n      this.getPrivateKey$()\n    ).pipe(\n      first(),\n      filter(([publicKey, privateKey]) => publicKey.length === 0 || privateKey.length === 0),\n      switchMapTo(createEcKeyPair$()),\n      switchMap(({ publicKey, privateKey }) => zip(\n        preferences.setString$(PrefKeys.PublicKey, publicKey),\n        preferences.setString$(PrefKeys.PrivateKey, privateKey)\n      ))\n    );\n  }\n\n  static getPublicKey$() {\n    return preferences.getString$(PrefKeys.PublicKey);\n  }\n\n  static getPrivateKey$() {\n    return preferences.getString$(PrefKeys.PrivateKey);\n  }\n\n  protected provide$(proof: Proof, serialized: string): Observable<Signature> {\n    return DefaultSignatureProvider.getPrivateKey$().pipe(\n      first(),\n      switchMap(privateKeyHex => signWithSha256AndEcdsa$(serialized, privateKeyHex)),\n      switchMap(signatureHex => zip(of(signatureHex), DefaultSignatureProvider.getPublicKey$())),\n      first(),\n      map(([signatureHex, publicKeyHex]) => ({\n        proofHash: proof.hash,\n        provider: this.name,\n        signature: signatureHex,\n        publicKey: publicKeyHex\n      }))\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { pluck, switchMap } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Signature } from '../../data/signature/signature';\nimport { SignatureRepository } from '../../data/signature/signature-repository.service';\nimport { SerializationService } from '../../serialization/serialization.service';\n\nexport abstract class SignatureProvider {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly signatureRepository: SignatureRepository,\n    private readonly serializationService: SerializationService\n  ) { }\n\n  signAndStore$(proof: Proof) {\n    return this.serializationService.stringify$(proof).pipe(\n      switchMap(serialized => this.provide$(proof, serialized)),\n      switchMap(signature => this.signatureRepository.add$(signature)),\n      pluck(0)\n    );\n  }\n\n  protected abstract provide$(proof: Proof, serialized: string): Observable<Signature>;\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { concatMap, concatMapTo, first, map, switchMap } from 'rxjs/operators';\nimport { isNonNullable } from 'src/app/utils/rx-operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Caption } from './caption';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaptionRepository {\n\n  private readonly captionStorage = new Storage<Caption>('caption');\n\n  refresh$() { return this.captionStorage.refresh$(); }\n\n  getByProof$(proof: Proof) {\n    return this.captionStorage.getAll$().pipe(\n      map(captions => captions.find(caption => caption.proofHash === proof.hash))\n    );\n  }\n\n  addOrEdit$(value: Caption) {\n    return this.captionStorage.getAll$().pipe(\n      first(),\n      map(captions => captions.find(caption => caption.proofHash === value.proofHash)),\n      concatMap(found => {\n        if (found) { return this.remove$(found); }\n        return of(found);\n      }),\n      concatMapTo(this.captionStorage.add$(value))\n    );\n  }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      isNonNullable(),\n      switchMap(caption => this.remove$(caption))\n    );\n  }\n\n  remove$(...captions: Caption[]) {\n    return this.captionStorage.remove$(...captions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Information } from './information';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InformationRepository {\n\n  private readonly informationStorage = new Storage<Information>('information');\n\n  refresh$() { return this.informationStorage.refresh$(); }\n\n  getByProof$(proof: Proof) {\n    return this.informationStorage.getAll$().pipe(\n      map(informationList => informationList.filter(info => info.proofHash === proof.hash))\n    );\n  }\n\n  add$(...information: Information[]) { return this.informationStorage.add$(...information); }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      switchMap(informationList => this.remove$(...informationList))\n    );\n  }\n\n  remove$(...information: Information[]) {\n    return this.informationStorage.remove$(...information);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FilesystemDirectory, Plugins } from '@capacitor/core';\nimport { defer } from 'rxjs';\nimport { filter, map, pluck, switchMap, switchMapTo } from 'rxjs/operators';\nimport { sha256WithBase64$ } from 'src/app/utils/crypto/crypto';\nimport { getExtension, MimeType } from 'src/app/utils/mime-type';\nimport { forkJoinWithDefault } from 'src/app/utils/rx-operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { CaptionRepository } from '../caption/caption-repository.service';\nimport { InformationRepository } from '../information/information-repository.service';\nimport { SignatureRepository } from '../signature/signature-repository.service';\nimport { Proof } from './proof';\n\nconst { Filesystem } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProofRepository {\n\n  private readonly proofStorage = new Storage<Proof>('proof');\n  private readonly rawFileDir = FilesystemDirectory.Data;\n  private readonly rawFileFolderName = 'raw';\n\n  constructor(\n    private readonly captionRepository: CaptionRepository,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository\n  ) { }\n\n  refresh$() { return this.proofStorage.refresh$(); }\n\n  getAll$() { return this.proofStorage.getAll$(); }\n\n  getByHash$(hash: string) {\n    return this.getAll$().pipe(\n      map(proofList => proofList.find(proof => proof.hash === hash)),\n      filter(proof => !!proof)\n    );\n  }\n\n  add$(...proofs: Proof[]) { return this.proofStorage.add$(...proofs); }\n\n  remove$(...proofs: Proof[]) {\n    return this.proofStorage.remove$(...proofs).pipe(\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.deleteRawFile$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.captionRepository.removeByProof$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.informationRepository.removeByProof$(proof)))),\n      switchMapTo(forkJoinWithDefault(proofs.map(proof => this.signatureRepository.removeByProof$(proof))))\n    );\n  }\n\n  getRawFile$(proof: Proof) {\n    return defer(() => Filesystem.readFile({\n      path: `${this.rawFileFolderName}/${proof.hash}.${getExtension(proof.mimeType)}`,\n      directory: this.rawFileDir\n    })).pipe(pluck('data'));\n  }\n\n  /**\n   * Copy [rawBase64] to add raw file to internal storage.\n   * @param rawBase64 The original source of raw file which will be copied.\n   * @param mimeType The file added in the internal storage. The name of the returned file will be its hash with original extension.\n   */\n  saveRawFile$(rawBase64: string, mimeType: MimeType) {\n    return sha256WithBase64$(rawBase64).pipe(\n      switchMap(hash => Filesystem.writeFile({\n        path: `${this.rawFileFolderName}/${hash}.${getExtension(mimeType)}`,\n        data: rawBase64,\n        directory: this.rawFileDir,\n        recursive: true\n      })),\n      pluck('uri')\n    );\n  }\n\n  private deleteRawFile$(proof: Proof) {\n    return defer(() => Filesystem.deleteFile({\n      path: `${this.rawFileFolderName}/${proof.hash}.${getExtension(proof.mimeType)}`,\n      directory: this.rawFileDir\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { first, map, switchMap } from 'rxjs/operators';\nimport { Storage } from 'src/app/utils/storage/storage';\nimport { Proof } from '../proof/proof';\nimport { Signature } from './signature';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignatureRepository {\n\n  private readonly signatureStorage = new Storage<Signature>('signature');\n\n  refresh$() { return this.signatureStorage.refresh$(); }\n\n  getByProof$(proof: Proof) {\n    return this.signatureStorage.getAll$().pipe(\n      map(signatures => signatures.filter(info => info.proofHash === proof.hash))\n    );\n  }\n\n  add$(...signatures: Signature[]): Observable<Signature[]> {\n    return this.signatureStorage.add$(...signatures);\n  }\n\n  removeByProof$(proof: Proof) {\n    return this.getByProof$(proof).pipe(\n      first(),\n      switchMap(signatures => this.remove$(...signatures))\n    );\n  }\n\n  remove$(...signatures: Signature[]) {\n    return this.signatureStorage.remove$(...signatures);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { first, mapTo, switchMap } from 'rxjs/operators';\nimport { defaultLanguage, languages } from 'src/app/transloco/transloco-root.module';\nimport { PreferenceManager } from '../../utils/preferences/preference-manager';\n\nconst preferences = PreferenceManager.LANGUAGE_PREF;\nconst enum PrefKeys {\n  Language = 'language'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  readonly languages = languages;\n  readonly defaultLanguage = defaultLanguage;\n  readonly currentLanguageKey$ = preferences.getString$(PrefKeys.Language, defaultLanguage[0]);\n\n  constructor(\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  initialize$() {\n    this.translocoService.setDefaultLang(defaultLanguage[0]);\n    return this.currentLanguageKey$.pipe(\n      first(),\n      switchMap(key => this.setCurrentLanguage$(key))\n    );\n  }\n\n  setCurrentLanguage$(key: string) {\n    return preferences.setString$(PrefKeys.Language, key).pipe(\n      mapTo(this.translocoService.setActiveLang(key)),\n      mapTo(key)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer } from 'rxjs';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\n\nconst { LocalNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private currentId = 1;\n\n  constructor(\n    private readonly translocoService: TranslocoService\n  ) {\n    LocalNotifications.requestPermission()\n      .then(result => console.log(`Notification permission request result: ${result.granted}`));\n  }\n\n  createNotificationId() {\n    this.currentId++;\n    return this.currentId;\n  }\n\n  // TODO: Add on-going configurations when this PR got merged and released:\n  //       https://github.com/ionic-team/capacitor/pull/3165\n  notify(id: number, title: string, body: string) {\n    console.log(`${title}: ${body}`);\n    subscribeInBackground(defer(() => LocalNotifications.schedule({\n      notifications: [{ title, body, id }]\n    })));\n  }\n\n  notifyError(id: number, error: Error) {\n    this.notify(id, this.translocoService.translate('unknownError'), JSON.stringify(error));\n  }\n\n  cancel(id: number) {\n    subscribeInBackground(defer(() => LocalNotifications.cancel({ notifications: [{ id: String(id) }] })));\n  }\n}\n","import { TranslocoService } from '@ngneat/transloco';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { subscribeInBackground } from 'src/app/utils/background-task/background-task';\nimport { Proof } from '../data/proof/proof';\nimport { NotificationService } from '../notification/notification.service';\n\nexport abstract class Publisher {\n\n  abstract readonly name: string;\n\n  constructor(\n    private readonly translocoService: TranslocoService,\n    private readonly notificationService: NotificationService\n  ) { }\n\n  publish(proof: Proof) {\n    const notificationId = this.notificationService.createNotificationId();\n    this.notificationService.notify(\n      notificationId,\n      this.translocoService.translate('publishingProof'),\n      this.translocoService.translate('message.publishingProof', { hash: proof.hash, publisherName: this.name })\n    );\n    subscribeInBackground(\n      this.run$(proof).pipe(\n        tap(_ => this.notificationService.notify(\n          notificationId,\n          this.translocoService.translate('proofPublished'),\n          this.translocoService.translate('message.proofPublished', { hash: proof.hash, publisherName: this.name })\n        ))\n      ),\n      error => this.notificationService.notifyError(notificationId, error)\n    );\n  }\n\n  abstract isEnabled$(): Observable<boolean>;\n\n  protected abstract run$(proof: Proof): Observable<void>;\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { from, of, zip } from 'rxjs';\nimport { filter, first, pluck, switchMap, toArray } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Publisher } from '../publisher';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublishersAlert {\n\n  private readonly publishers: Publisher[] = [];\n\n  constructor(\n    private readonly alertController: AlertController,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  addPublisher(publisher: Publisher) {\n    this.publishers.push(publisher);\n  }\n\n  present$(proof: Proof) {\n    return this.getEnabledPublishers$().pipe(\n      switchMap(publishers => this.alertController.create({\n        header: this.translocoService.translate('selectAPublisher'),\n        inputs: publishers.map((publisher, index) => ({\n          name: publisher.name,\n          type: 'radio',\n          label: publisher.name,\n          value: publisher.name,\n          checked: index === 0\n        })),\n        buttons: [{\n          text: this.translocoService.translate('cancel'),\n          role: 'cancel'\n        }, {\n          text: this.translocoService.translate('ok'),\n          handler: (name) => this.getPublisherByName(name)?.publish(proof)\n        }]\n      })),\n      switchMap(alertElement => alertElement.present())\n    );\n  }\n\n  private getEnabledPublishers$() {\n    return from(this.publishers).pipe(\n      switchMap(publisher => zip(of(publisher), publisher.isEnabled$().pipe(first()))),\n      filter(([_, isEnabled]) => isEnabled),\n      pluck(0),\n      toArray()\n    );\n  }\n\n  private getPublisherByName(name: string) {\n    return this.publishers.find(publisher => publisher.name === name);\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { Proof } from '../../data/proof/proof';\nimport { Publisher } from '../publisher';\n\nexport class SamplePublisher extends Publisher {\n\n  readonly name = 'Sample Publisher';\n\n  run$(proof: Proof): Observable<void> {\n    return of(void 0).pipe(delay(3000));\n  }\n\n  isEnabled$() {\n    return of(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { first, map } from 'rxjs/operators';\nimport { Information } from '../data/information/information';\nimport { InformationRepository } from '../data/information/information-repository.service';\nimport { Proof } from '../data/proof/proof';\n\ntype EssentialInformation = Pick<Information, 'provider' | 'name' | 'value'>;\n\ninterface SortedProofInformation {\n  readonly proof: Proof;\n  readonly information: EssentialInformation[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerializationService {\n\n  constructor(\n    private readonly informationRepository: InformationRepository\n  ) { }\n\n  stringify$(proof: Proof) {\n    return this.createSortedProofInformation$(proof).pipe(\n      map(sortedProofInformation => JSON.stringify(sortedProofInformation))\n    );\n  }\n\n  private createSortedProofInformation$(proof: Proof) {\n    return this.informationRepository.getByProof$(proof).pipe(\n      first(),\n      map(informationList => {\n        const sortedInformation = informationList.sort((a: Information, b: Information) => {\n          const providerCompared = a.provider.localeCompare(b.provider);\n          const nameCompared = a.name.localeCompare(b.name);\n          const valueCompared = a.value.localeCompare(b.value);\n          if (providerCompared !== 0) { return providerCompared; }\n          if (nameCompared !== 0) { return nameCompared; }\n          return valueCompared;\n        }).map(({ provider, name, value }) => ({ provider, name, value } as EssentialInformation));\n        return ({ proof, information: sortedInformation } as SortedProofInformation);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Translation, translocoConfig, TranslocoLoader, TranslocoModule, TRANSLOCO_CONFIG, TRANSLOCO_LOADER } from '@ngneat/transloco';\nimport { environment } from '../../environments/environment';\n\nexport const languages: { [key: string]: string; } = {\n  'en-us': 'English (United State)',\n  'zh-tw': '繁體中文（台灣）'\n};\n\nexport const defaultLanguage = Object.entries(languages)[0];\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private readonly http: HttpClient) { }\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`./assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: Object.keys(languages),\n        defaultLang: defaultLanguage[0],\n        fallbackLang: defaultLanguage[0],\n        missingHandler: { useFallbackTranslation: true },\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule { }\n","import { Capacitor, Plugins } from '@capacitor/core';\nimport { Observable } from 'rxjs';\n\nconst { BackgroundTask } = Plugins;\n\nexport function subscribeInBackground(\n  work$: Observable<any>,\n  error?: (error: any) => void,\n  complete?: () => void\n) {\n  if (Capacitor.isPluginAvailable('BackgroundTask')) {\n    const taskId = BackgroundTask.beforeExit(() => {\n      work$.subscribe(_ => BackgroundTask.finish({ taskId }), error, complete);\n    });\n  } else {\n    work$.subscribe(_ => _, error, complete);\n  }\n}\n","import { defer, of, zip } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { arrayBufferToHex, base64ToArrayBuffer, hexToArrayBuffer, stringToArrayBuffer } from '../encoding/encoding';\n\nconst subtle = crypto.subtle;\nconst SHA_256 = 'SHA-256';\nconst ECDSA = 'ECDSA';\nconst SECP256R1 = 'P-256';\nconst enum Usage {\n  Sign = 'sign',\n  Verify = 'verify'\n}\nconst enum Format {\n  PKCS8 = 'pkcs8',\n  SubjectPublicKeyInfo = 'spki'\n}\n\ninterface KeyPair {\n  publicKey: string;\n  privateKey: string;\n}\n\nexport function sha256$<T extends object>(object: T) {\n  return of(JSON.stringify(object)).pipe(\n    switchMap(json => sha256WithString$(json))\n  );\n}\n\nexport function sha256WithString$(str: string) {\n  return of(new TextEncoder().encode(str).buffer).pipe(\n    switchMap(arrayBuffer => subtle.digest(SHA_256, arrayBuffer)),\n    map(digested => arrayBufferToHex(digested))\n  );\n}\n\nexport function sha256WithBase64$(base64: string) {\n  return of(base64ToArrayBuffer(base64)).pipe(\n    switchMap(arrayBuffer => subtle.digest(SHA_256, arrayBuffer)),\n    map(digested => arrayBufferToHex(digested))\n  );\n}\n\nexport function createEcKeyPair$() {\n  return defer(() => subtle.generateKey(\n    {\n      name: ECDSA,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Sign, Usage.Verify]\n  )).pipe(\n    switchMap(({ publicKey, privateKey }) => zip(exportEcdsaPublicKey$(publicKey), exportEcdsaPrivateKey$(privateKey))),\n    map(([publicKey, privateKey]) => ({ publicKey, privateKey } as KeyPair))\n  );\n}\n\nexport function signWithSha256AndEcdsa$(message: string, privateKeyHex: string) {\n  return importEcdsaPrivateKey$(privateKeyHex).pipe(\n    switchMap(key => subtle.sign({ name: ECDSA, hash: SHA_256 }, key, stringToArrayBuffer(message))),\n    map(signature => arrayBufferToHex(signature))\n  );\n}\n\nexport function verifyWithSha256AndEcdsa$(message: string, signatureHex: string, publicKeyHex: string) {\n  return importEcdsaPublicKey$(publicKeyHex).pipe(\n    switchMap(key => subtle.verify(\n      { name: ECDSA, hash: SHA_256 },\n      key,\n      hexToArrayBuffer(signatureHex),\n      stringToArrayBuffer(message)\n    ))\n  );\n}\n\nfunction exportEcdsaPublicKey$(key: CryptoKey) {\n  return defer(() => subtle.exportKey(Format.SubjectPublicKeyInfo, key)).pipe(\n    map(arrayBuffer => arrayBufferToHex(arrayBuffer))\n  );\n}\n\nfunction exportEcdsaPrivateKey$(key: CryptoKey) {\n  return defer(() => subtle.exportKey(Format.PKCS8, key)).pipe(\n    map(arrayBuffer => arrayBufferToHex(arrayBuffer))\n  );\n}\n\nfunction importEcdsaPublicKey$(keyHex: string) {\n  return defer(() => subtle.importKey(\n    Format.SubjectPublicKeyInfo,\n    hexToArrayBuffer(keyHex),\n    {\n      name: ECDSA,\n      hash: SHA_256,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Verify]\n  ));\n}\n\nfunction importEcdsaPrivateKey$(keyHex: string) {\n  return defer(() => subtle.importKey(\n    Format.PKCS8,\n    hexToArrayBuffer(keyHex),\n    {\n      name: ECDSA,\n      hash: SHA_256,\n      namedCurve: SECP256R1\n    },\n    true,\n    [Usage.Sign]\n  ));\n}\n","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nexport function base64ToArrayBuffer(base64: string) {\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport function arrayBufferToBase64(arrayBuffer: ArrayBuffer) {\n  return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n}\n\nexport function arrayBufferToHex(arrayBuffer: ArrayBuffer) {\n  return [...new Uint8Array(arrayBuffer)]\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\nexport function hexToArrayBuffer(hex: string) {\n  // tslint:disable-next-line: no-non-null-assertion\n  return new Uint8Array(hex.match(/[\\da-f]{2}/gi)!.map(h => parseInt(h, 16))).buffer;\n}\n\nexport function stringToArrayBuffer(str: string) {\n  return textEncoder.encode(str).buffer;\n}\n\nexport function arrayBufferToString(arrayBuffer: ArrayBuffer) {\n  return textDecoder.decode(arrayBuffer);\n}\n","export function fileNameWithoutExtension(uri: string) {\n    // tslint:disable-next-line: no-non-null-assertion\n    return uri.match(/([^\\/]+)(?=\\.\\w+$)/)![0];\n}\n","// MimeType should be the subset of string type so `JSON.stringify` can generate meaningful text to\n// other platform.\nexport type MimeType = 'image/jpeg' | 'image/png';\n\nexport function getExtension(mimeType: MimeType) {\n  switch (mimeType) {\n    case 'image/jpeg':\n      return 'jpg';\n    case 'image/png':\n      return 'png';\n  }\n}\n\nexport function fromExtension(extension: string): MimeType {\n  switch (extension) {\n    case 'jpg':\n    case 'jpeg':\n      return 'image/jpeg';\n    case 'png':\n      return 'image/png';\n    default:\n      throw TypeError(`Unknown extension: ${extension}`);\n  }\n}\n","import { Preferences } from './preferences';\n\nconst enum RepositoryName {\n  Language = 'language',\n  DefaultInformationProvider = 'defaultInformationProvider',\n  DefaultSignatureProvider = 'defaultSignatureProvider'\n}\n\nexport class PreferenceManager {\n\n  static readonly LANGUAGE_PREF = new Preferences(RepositoryName.Language);\n  static readonly DEFAULT_INFORMATION_PROVIDER_PREF = new Preferences(RepositoryName.DefaultInformationProvider);\n  static readonly DEFAULT_SIGNATURE_PROVIDER_PREF = new Preferences(RepositoryName.DefaultSignatureProvider);\n}\n","import { Plugins } from '@capacitor/core';\nimport { BehaviorSubject, defer, Observable, of } from 'rxjs';\nimport { concatMapTo, map, mapTo, pluck, switchMap, tap } from 'rxjs/operators';\n\nconst { Storage } = Plugins;\n\nexport class Preferences {\n\n  constructor(readonly name: string) { }\n\n  private readonly subjects = new Map<string, BehaviorSubject<any>>();\n\n  get$<T>(key: string, defaultValue: T, converter: (str: string) => T = JSON.parse): Observable<T> {\n    return defer(() => of(this.subjects.has(key))).pipe(\n      switchMap(existed => {\n        if (!existed) { return this._get$(key, defaultValue, converter); }\n        return of(existed);\n      }),\n      // tslint:disable-next-line: no-non-null-assertion\n      concatMapTo(defer(() => this.subjects.get(key)!.asObservable()))\n    );\n  }\n\n  private _get$<T>(key: string, defaultValue: T, converter: (str: string) => T): Observable<T> {\n    return defer(() => Storage.get({ key: `${this.name}_${key}` })).pipe(\n      pluck('value'),\n      map(value => (value && value !== '[null]') ? converter(value) : defaultValue),\n      tap(converted => this.updateSubjects(key, converted))\n    );\n  }\n\n  getBoolean$(key: string, defaultValue: boolean = false) {\n    return this.get$(key, defaultValue, (v) => v === 'true');\n  }\n\n  getNumber$(key: string, defaultValue: number = 0) {\n    return this.get$(key, defaultValue, Number);\n  }\n\n  getString$(key: string, defaultValue: string = '') {\n    return this.get$(key, defaultValue, (v) => v);\n  }\n\n  set$<T>(key: string, value: T, converter: (value: T) => string = JSON.stringify): Observable<T> {\n    return defer(() => Storage.set({ key: `${this.name}_${key}`, value: converter(value) })).pipe(\n      mapTo(this.updateSubjects(key, value)),\n      mapTo(value)\n    );\n  }\n\n  setBoolean$(key: string, value: boolean) {\n    return this.set$(key, value, String);\n  }\n\n  setNumber$(key: string, value: number) {\n    return this.set$(key, value, String);\n  }\n\n  setString$(key: string, value: string) {\n    return this.set$(key, value, (v) => v);\n  }\n\n  private updateSubjects<T>(key: string, value: T) {\n    if (this.subjects.has(key)) { this.subjects.get(key)?.next(value); }\n    else { this.subjects.set(key, new BehaviorSubject(value)); }\n  }\n}\n","import { forkJoin, Observable } from 'rxjs';\nimport { defaultIfEmpty, filter } from 'rxjs/operators';\n\nexport function isNonNullable<T>() {\n  return (source$: Observable<null | undefined | T>) => source$.pipe(\n    filter((v): v is NonNullable<T> => v !== null && v !== undefined)\n  );\n}\n\nexport function forkJoinWithDefault<T>(sources: Observable<T>[], defaultValue: T[] = []) {\n  return forkJoin(sources).pipe(\n    defaultIfEmpty(defaultValue)\n  );\n}\n","import { FilesystemDirectory, FilesystemEncoding, Plugins } from '@capacitor/core';\nimport { BehaviorSubject, defer, from, Observable, of } from 'rxjs';\nimport { catchError, concatMap, map, mapTo, pluck, switchMap, switchMapTo, tap, toArray } from 'rxjs/operators';\nimport { sha256$ } from '../crypto/crypto';\nimport { forkJoinWithDefault } from '../rx-operators';\n\nconst { Filesystem } = Plugins;\n\nexport class Storage<T extends object> {\n\n  constructor(\n    readonly name: string,\n    readonly directory: FilesystemDirectory = FilesystemDirectory.Data\n  ) { }\n\n  private readonly tuples$ = new BehaviorSubject<T[]>([]);\n\n  refresh$() {\n    return this.makeNameDir$().pipe(\n      switchMapTo(this.readNameDir$()),\n      pluck('files'),\n      switchMap(fileNames => from(fileNames)),\n      concatMap(fileName => this.readFile$(fileName)),\n      map(result => JSON.parse(result.data) as T),\n      toArray(),\n      tap(tuples => this.tuples$.next(tuples))\n    );\n  }\n\n  private makeNameDir$(): Observable<void> {\n    return defer(() => Filesystem.mkdir({\n      path: this.name,\n      directory: this.directory,\n      recursive: true\n    })).pipe(\n      mapTo(void 0),\n      catchError((err: Error) => {\n        console.log(`${this.directory}/${this.name}: ${err.message}`);\n        return of(void 0);\n      })\n    );\n  }\n\n  private readNameDir$() {\n    return defer(() => Filesystem.readdir({\n      path: this.name,\n      directory: this.directory\n    }));\n  }\n\n  private readFile$(fileName: string) {\n    return defer(() => Filesystem.readFile({\n      path: `${this.name}/${fileName}`,\n      directory: this.directory,\n      encoding: FilesystemEncoding.UTF8\n    }));\n  }\n\n  getAll$() { return this.tuples$.asObservable(); }\n\n  add$(...tuples: T[]) {\n    return forkJoinWithDefault(tuples.map(tuple => this.saveFile$(tuple))).pipe(\n      switchMapTo(this.refresh$()),\n      mapTo(tuples)\n    );\n  }\n\n  private saveFile$(tuple: T) {\n    return sha256$(tuple).pipe(\n      switchMap(hash => Filesystem.writeFile({\n        path: `${this.name}/${hash}.json`,\n        data: JSON.stringify(tuple),\n        directory: this.directory,\n        encoding: FilesystemEncoding.UTF8,\n        recursive: true\n      })));\n  }\n\n  remove$(...tuples: T[]) {\n    return forkJoinWithDefault(tuples.map(tuple => this.deleteFile$(tuple))).pipe(\n      switchMapTo(this.refresh$()),\n      mapTo(tuples)\n    );\n  }\n\n  private deleteFile$(tuple: T) {\n    return sha256$(tuple).pipe(\n      switchMap(hash => Filesystem.deleteFile({\n        path: `${this.name}/${hash}.json`,\n        directory: this.directory\n      })));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\ndefineCustomElements(window);\n"]}