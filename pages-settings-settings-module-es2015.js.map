{"version":3,"sources":["./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.module.ts","./src/app/pages/settings/settings.page.scss","./src/app/pages/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gUAAiQ,0BAA0B,qGAAqG,yBAAyB,qHAAqH,2BAA2B,iOAAiO,kBAAkB,6FAA6F,kCAAkC,sJAAsJ,2BAA2B,oBAAoB,sBAAsB,6KAA6K,4BAA4B,oBAAoB,uBAAuB,yEAAyE,E;;;;;;;;;;;;;;;;;;;ACAz5C;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBS;AACN;AACI;AACA;AACS;AACgB;AACvB;AAY/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAI;AAAtB,kBAAkB;IAV9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kFAAyB;YACzB,mEAAe,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;SAC3C;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAI;AAAJ;;;;;;;;;;;;;AClB/B;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;ACAtK;AAC2B;AAC6C;AACrC;AAQ7E,IAAa,YAAY,GAAzB,MAAa,YAAY;IAQvB,YACmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAP1C,cAAS,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QAC3C,oBAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACvD,wBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC;QAC/D,eAAU,GAAG,+HAAwB,CAAC,aAAa,EAAE,CAAC;QACtD,gBAAW,GAAG,+HAAwB,CAAC,cAAc,EAAE,CAAC;IAI7D,CAAC;IAEL,kBAAkB,CAAC,WAAmB;QACpC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,IAAI,CACxD,4EAAc,CAAC,IAAI,CAAC,CACrB,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;CACF;;YARqC,0FAAe;;AATxC,YAAY;IANxB,0EAAY,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IACvC,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gOAAmC;;KAEpC,CAAC;GACW,YAAY,CAiBxB;AAjBwB","file":"pages-settings-settings-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"..\\\" routerDirection=\\\"back\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'settings' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>{{ 'general' | translate }}</ion-list-header>\\n    <ion-item>\\n      <ion-icon name=\\\"language\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>{{ 'languages' | translate }}</ion-label>\\n      <ion-select [ngModel]=\\\"currentLanguageKey$ | async\\\" (ngModelChange)=\\\"setCurrentLanguage($event)\\\">\\n        <ion-select-option *ngFor=\\\"let language of langauges | keyvalue\\\" [value]=\\\"language.key\\\">{{ language.value }}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-list-header>{{ 'defaultSignature' | translate }}</ion-list-header>\\n    <ion-item>\\n      <ion-icon name=\\\"key\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ 'publicKey' | translate }}</h2>\\n        <p>{{ publicKey$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon name=\\\"key\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ 'privateKey' | translate }}</h2>\\n        <p>{{ privateKey$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    TranslateModule.forChild({ extend: true })\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { DefaultSignatureProvider } from 'src/app/services/collector/signature/default-provider/default-provider';\nimport { LanguageService } from 'src/app/services/language/language.service';\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage {\n\n  readonly langauges = this.languageService.languages;\n  readonly defaultLanguage = this.languageService.defaultLanguage;\n  readonly currentLanguageKey$ = this.languageService.currentLanguageKey$;\n  readonly publicKey$ = DefaultSignatureProvider.getPublicKey$();\n  readonly privateKey$ = DefaultSignatureProvider.getPrivateKey$();\n\n  constructor(\n    private readonly languageService: LanguageService\n  ) { }\n\n  setCurrentLanguage(languageKey: string) {\n    this.languageService.setCurrentLanguage$(languageKey).pipe(\n      untilDestroyed(this)\n    ).subscribe();\n  }\n}\n"],"sourceRoot":"webpack:///"}