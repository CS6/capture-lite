{"version":3,"sources":["webpack:///src/app/pages/proof/proof.page.html","webpack:///src/app/pages/proof/proof-routing.module.ts","webpack:///src/app/pages/proof/proof.module.ts","webpack:///src/app/pages/proof/proof.page.scss","webpack:///src/app/pages/proof/proof.page.ts","webpack:///src/app/services/blocking-action/blocking-action.service.ts","webpack:///src/app/services/confirm-alert/confirm-alert.service.ts"],"names":["routes","path","component","ProofPageRoutingModule","imports","forChild","exports","ProofPageModule","declarations","ProofPage","router","route","translocoService","alertController","confirmAlert","publishersAlert","proofRepository","captionRepository","informationRepository","signatureRepository","blockingActionService","proof$","paramMap","pipe","params","get","hash","getByHash$","rawBase64$","proof","getRawFile$","hash$","mimeType$","timestamp$","Date","timestamp","caption$","getByProof$","caption","text","length","providersWithImportantInformation$","informationList","providers","Set","map","information","provider","filter","importance","signatures$","refresh$","subscribe","present$","onConfirm","run$","remove$","navigate","message","translate","captionInputName","create","header","inputs","name","type","value","placeholder","buttons","role","handler","saveCaption","alertElement","present","addOrEdit$","proofHash","checkProperties","selector","template","BlockingActionService","loadingController","action$","opts","loading","_run$","err","dismiss","result","_","providedIn","ConfirmAlert"],"mappings":"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","file":"pages-proof-proof-module-es5.js","sourcesContent":["export default \"<ion-header *transloco=\\\"let t\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button [routerLink]=\\\"['/storage']\\\" routerDirection=\\\"back\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ t('proofDetails') }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"publish()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-upload\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"remove()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *transloco=\\\"let t\\\">\\n  <ion-img [src]=\\\"'data:image/*;base64,' + (rawBase64$ | async)\\\"></ion-img>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"reader\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('caption') }}</h2>\\n        <p>{{ (caption$ | async) === '' ? '(' + ( t('nothingHere') ) + ')' : (caption$ | async) }}</p>\\n      </ion-label>\\n      <ion-button (click)=\\\"editCaption()\\\" slot=\\\"end\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"information\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('hash') }}</h2>\\n        <p>{{ hash$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"image\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('mimeType') }}</h2>\\n        <p>{{ mimeType$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"time\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('timestamp') }}</h2>\\n        <p>{{ timestamp$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-list-header>\\n      <ion-label>\\n        <h2>{{ t('information') }}</h2>\\n      </ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-slides pager>\\n        <ion-slide>\\n          <ion-card class=\\\"slide-card\\\"\\n            *ngFor=\\\"let providerWithInformationList of (providersWithImportantInformation$ | async)\\\">\\n            <ion-card-header>\\n              <ion-card-title>{{ providerWithInformationList.provider }}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list *ngFor=\\\"let information of providerWithInformationList.informationList\\\">\\n                <ion-item>\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ information.name }}</h3>\\n                    <p>{{ information.value }}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-list>\\n              <section>\\n                <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/information', {hash: (hash$ | async)}]\\\">View All\\n                </ion-button>\\n              </section>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-slide>\\n      </ion-slides>\\n    </ion-item>\\n    <ion-list-header>\\n      <ion-label>\\n        <h2>{{ t('signatures') }}</h2>\\n      </ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-slides pager>\\n        <ion-slide *ngFor=\\\"let signature of (signatures$ | async)\\\">\\n          <ion-card class=\\\"slide-card\\\">\\n            <ion-card-header>\\n              <ion-card-title>{{ signature.provider }}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ t('signature') }}</h3>\\n                    <p>{{ signature.signature }}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ t('publicKey') }}</h3>\\n                    <p class=\\\"multiline\\\">{{ signature.publicKey }}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-list>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-slide>\\n      </ion-slides>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProofPage } from './proof.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: ProofPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProofPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { ProofPageRoutingModule } from './proof-routing.module';\nimport { ProofPage } from './proof.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProofPageRoutingModule,\n    TranslocoModule\n  ],\n  declarations: [ProofPage]\n})\nexport class ProofPageModule { }\n","export default \"ion-slides {\\n  width: 100%;\\n}\\n\\n.slide-card {\\n  width: 100%;\\n  margin-bottom: 35px;\\n}\\n\\n.multiline {\\n  white-space: pre-wrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvb2YvcHJvb2YucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvb2YvcHJvb2YucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNsaWRlcyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uc2xpZGUtY2FyZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xufVxuXG4ubXVsdGlsaW5lIHtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuIl19 */\";","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { defer } from 'rxjs';\nimport { first, map, pluck, switchMap, switchMapTo } from 'rxjs/operators';\nimport { BlockingActionService } from 'src/app/services/blocking-action/blocking-action.service';\nimport { ConfirmAlert } from 'src/app/services/confirm-alert/confirm-alert.service';\nimport { CaptionRepository } from 'src/app/services/data/caption/caption-repository.service';\nimport { Importance } from 'src/app/services/data/information/information';\nimport { InformationRepository } from 'src/app/services/data/information/information-repository.service';\nimport { ProofRepository } from 'src/app/services/data/proof/proof-repository.service';\nimport { SignatureRepository } from 'src/app/services/data/signature/signature-repository.service';\nimport { PublishersAlert } from 'src/app/services/publisher/publishers-alert/publishers-alert.service';\nimport { isNonNullable } from 'src/app/utils/rx-operators';\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-proof',\n  templateUrl: './proof.page.html',\n  styleUrls: ['./proof.page.scss'],\n})\nexport class ProofPage {\n\n  readonly proof$ = this.route.paramMap.pipe(\n    map(params => params.get('hash')),\n    isNonNullable(),\n    switchMap(hash => this.proofRepository.getByHash$(hash)),\n    isNonNullable()\n  );\n\n  readonly rawBase64$ = this.proof$.pipe(switchMap(proof => this.proofRepository.getRawFile$(proof)));\n  readonly hash$ = this.proof$.pipe(pluck('hash'));\n  readonly mimeType$ = this.proof$.pipe(pluck('mimeType'));\n  readonly timestamp$ = this.proof$.pipe(map(proof => new Date(proof.timestamp)));\n  readonly caption$ = this.proof$.pipe(\n    switchMap(proof => this.captionRepository.getByProof$(proof)),\n    map(caption => {\n      if (caption && caption.text.length > 0) { return caption.text; }\n      return '';\n    })\n  );\n\n  readonly providersWithImportantInformation$ = this.proof$.pipe(\n    switchMap(proof => this.informationRepository.getByProof$(proof)),\n    map(informationList => {\n      const providers = new Set(informationList.map(information => information.provider));\n      return [...providers].map(provider => ({\n        provider,\n        informationList: informationList.filter(\n          information => information.provider === provider && information.importance === Importance.High\n        )\n      }));\n    })\n  );\n\n  readonly signatures$ = this.proof$.pipe(\n    switchMap(proof => this.signatureRepository.getByProof$(proof))\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly translocoService: TranslocoService,\n    private readonly alertController: AlertController,\n    private readonly confirmAlert: ConfirmAlert,\n    private readonly publishersAlert: PublishersAlert,\n    private readonly proofRepository: ProofRepository,\n    private readonly captionRepository: CaptionRepository,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository,\n    private readonly blockingActionService: BlockingActionService\n  ) { }\n\n  ionViewWillEnter() {\n    this.proofRepository.refresh$().pipe(\n      switchMapTo(this.captionRepository.refresh$()),\n      switchMapTo(this.informationRepository.refresh$()),\n      switchMapTo(this.signatureRepository.refresh$()),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  publish() {\n    this.proof$.pipe(\n      first(),\n      switchMap(proof => this.publishersAlert.present$(proof)),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  remove() {\n    const onConfirm = () => this.blockingActionService.run$(\n      this.proof$.pipe(\n        switchMap(proof => this.proofRepository.remove$(proof)),\n        switchMapTo(defer(() => this.router.navigate(['..'])))\n      ),\n      { message: this.translocoService.translate('processing') }\n    ).pipe(untilDestroyed(this)).subscribe();\n\n    return this.confirmAlert.present$(onConfirm).pipe(untilDestroyed(this)).subscribe();\n  }\n\n  editCaption() {\n    const captionInputName = 'captionInputName';\n    this.caption$.pipe(\n      first(),\n      switchMap(caption => this.alertController.create({\n        header: this.translocoService.translate('editCaption'),\n        inputs: [{\n          name: captionInputName,\n          type: 'text',\n          value: caption,\n          placeholder: this.translocoService.translate('nothingHere')\n        }],\n        buttons: [{\n          text: this.translocoService.translate('cancel'),\n          role: 'cancel'\n        }, {\n          text: this.translocoService.translate('ok'),\n          handler: (inputs) => this.saveCaption(inputs[captionInputName])\n        }]\n      })),\n      switchMap(alertElement => alertElement.present()),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  private saveCaption(text: string) {\n    this.proof$.pipe(\n      switchMap(proof => this.captionRepository.addOrEdit$({\n        proofHash: proof.hash,\n        text\n      })),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { LoadingOptions } from '@ionic/core';\nimport { defer, Observable, of, zip } from 'rxjs';\nimport { catchError, map, switchMap, switchMapTo } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockingActionService {\n\n  constructor(\n    private readonly loadingController: LoadingController\n  ) { }\n\n  run$<T>(action$: Observable<T>, opts: LoadingOptions) {\n    return defer(() => this.loadingController.create(opts)).pipe(\n      switchMap(loading => this._run$(action$, loading))\n    );\n  }\n\n  private _run$<T>(action$: Observable<T>, loading: HTMLIonLoadingElement) {\n    return defer(() => loading.present()).pipe(\n      switchMapTo(action$),\n      catchError(err => {\n        loading.dismiss();\n        throw err;\n      }),\n      switchMap(result => zip(defer(() => loading.dismiss()), of(result))),\n      map(([_, result]) => result)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmAlert {\n\n  constructor(\n    private readonly alertController: AlertController,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  present$(onConfirm: () => void) {\n    return defer(() => this.alertController.create({\n      header: this.translocoService.translate('areYouSure'),\n      message: this.translocoService.translate('message.areYouSure'),\n      buttons: [{\n        text: this.translocoService.translate('cancel'),\n        role: 'cancel'\n      }, {\n        text: this.translocoService.translate('ok'),\n        handler: onConfirm\n      }]\n    })).pipe(\n      switchMap(alertElement => alertElement.present())\n    );\n  }\n}\n"]}