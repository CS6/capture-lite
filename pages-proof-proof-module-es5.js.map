{"version":3,"sources":["webpack:///src/app/pages/proof/proof.page.html","webpack:///src/app/pages/proof/proof-routing.module.ts","webpack:///src/app/pages/proof/proof.module.ts","webpack:///src/app/pages/proof/proof.page.scss","webpack:///src/app/pages/proof/proof.page.ts","webpack:///src/app/services/confirm-alert/confirm-alert.service.ts","webpack:///src/app/utils/type.ts"],"names":["routes","path","component","ProofPageRoutingModule","imports","forChild","exports","ProofPageModule","declarations","ProofPage","router","route","translocoService","alertController","confirmAlert","publishersAlert","proofRepository","captionRepository","informationRepository","signatureRepository","proof$","paramMap","pipe","params","get","hash","getByHash$","rawBase64$","proof","getRawFile$","hash$","mimeType$","mimeType","type","timestamp$","Date","timestamp","caption$","getByProof$","captions","length","text","providersWithInformationList$","informationList","providers","Set","map","information","provider","filter","signatures$","refresh$","subscribe","present$","onConfirm","remove$","navigate","captionInputName","caption","create","header","translate","inputs","name","value","placeholder","buttons","role","handler","saveCaption","alertElement","present","addOrEdit$","proofHash","checkProperties","selector","template","ConfirmAlert","message","providedIn","isNonNullable","source$","v","undefined"],"mappings":"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","file":"pages-proof-proof-module-es5.js","sourcesContent":["export default \"<ion-header *transloco=\\\"let t\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"..\\\" routerDirection=\\\"back\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ t('proofDetails') }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"publish()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-upload\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"remove()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *transloco=\\\"let t\\\">\\n  <ion-img [src]=\\\"'data:image/*;base64,' + (rawBase64$ | async)\\\"></ion-img>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"reader\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('caption') }}</h2>\\n        <p>{{ (caption$ | async) === '' ? '(' + ( t('nothingHere') ) + ')' : (caption$ | async) }}</p>\\n      </ion-label>\\n      <ion-button (click)=\\\"editCaption()\\\" slot=\\\"end\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"information\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('hash') }}</h2>\\n        <p>{{ hash$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"image\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('mimeType') }}</h2>\\n        <p>{{ mimeType$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"time\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('timestamp') }}</h2>\\n        <p>{{ timestamp$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-list-header>\\n      <ion-label>\\n        <h2>{{ t('information') }}</h2>\\n      </ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-slides pager>\\n        <ion-slide *ngFor=\\\"let providerWithInformationList of (providersWithInformationList$ | async)\\\">\\n          <ion-card class=\\\"slide-card\\\">\\n            <ion-card-header>\\n              <ion-card-title>{{ providerWithInformationList.provider }}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item *ngFor=\\\"let information of providerWithInformationList.informationList\\\">\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ information.name }}</h3>\\n                    <p>{{ information.value }}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-list>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-slide>\\n      </ion-slides>\\n    </ion-item>\\n    <ion-list-header>\\n      <ion-label>\\n        <h2>{{ t('signatures') }}</h2>\\n      </ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-slides pager>\\n        <ion-slide *ngFor=\\\"let signature of (signatures$ | async)\\\">\\n          <ion-card class=\\\"slide-card\\\">\\n            <ion-card-header>\\n              <ion-card-title>{{ signature.provider }}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ t('signature') }}</h3>\\n                    <p>{{ signature.signature }}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label class=\\\"ion-text-wrap\\\">\\n                    <h3>{{ t('publicKey') }}</h3>\\n                    <p class=\\\"multiline\\\">{{ signature.publicKey }}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-list>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-slide>\\n      </ion-slides>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProofPage } from './proof.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: ProofPage\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProofPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { ProofPageRoutingModule } from './proof-routing.module';\nimport { ProofPage } from './proof.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProofPageRoutingModule,\n    TranslocoModule\n  ],\n  declarations: [ProofPage]\n})\nexport class ProofPageModule { }\n","export default \"ion-slides {\\n  width: 100%;\\n}\\n\\n.slide-card {\\n  width: 100%;\\n  margin-bottom: 35px;\\n}\\n\\n.multiline {\\n  white-space: pre-wrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvb2YvcHJvb2YucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvb2YvcHJvb2YucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNsaWRlcyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uc2xpZGUtY2FyZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xufVxuXG4ubXVsdGlsaW5lIHtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuIl19 */\";","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { first, map, switchMap, switchMapTo } from 'rxjs/operators';\nimport { ConfirmAlert } from 'src/app/services/confirm-alert/confirm-alert.service';\nimport { CaptionRepository } from 'src/app/services/data/caption/caption-repository.service';\nimport { InformationRepository } from 'src/app/services/data/information/information-repository.service';\nimport { ProofRepository } from 'src/app/services/data/proof/proof-repository.service';\nimport { SignatureRepository } from 'src/app/services/data/signature/signature-repository.service';\nimport { PublishersAlert } from 'src/app/services/publisher/publishers-alert/publishers-alert.service';\nimport { isNonNullable } from 'src/app/utils/type';\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-proof',\n  templateUrl: './proof.page.html',\n  styleUrls: ['./proof.page.scss'],\n})\nexport class ProofPage {\n\n  readonly proof$ = this.route.paramMap.pipe(\n    map(params => params.get('hash')),\n    isNonNullable(),\n    switchMap(hash => this.proofRepository.getByHash$(hash)),\n    isNonNullable()\n  );\n  readonly rawBase64$ = this.proof$.pipe(switchMap(proof => this.proofRepository.getRawFile$(proof)));\n  readonly hash$ = this.proof$.pipe(map(proof => proof.hash));\n  readonly mimeType$ = this.proof$.pipe(map(proof => proof.mimeType.type));\n  readonly timestamp$ = this.proof$.pipe(map(proof => new Date(proof.timestamp)));\n  readonly caption$ = this.proof$.pipe(\n    switchMap(proof => this.captionRepository.getByProof$(proof)),\n    map(captions => {\n      if (captions.length === 0 || captions[0].text.length === 0) { return ''; }\n      return captions[0].text;\n    })\n  );\n  readonly providersWithInformationList$ = this.proof$.pipe(\n    switchMap(proof => this.informationRepository.getByProof$(proof)),\n    map(informationList => {\n      const providers = new Set(informationList.map(information => information.provider));\n      return [...providers].map(provider => ({\n        provider,\n        informationList: informationList.filter(information => information.provider === provider)\n      }));\n    })\n  );\n  readonly signatures$ = this.proof$.pipe(\n    switchMap(proof => this.signatureRepository.getByProof$(proof))\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly translocoService: TranslocoService,\n    private readonly alertController: AlertController,\n    private readonly confirmAlert: ConfirmAlert,\n    private readonly publishersAlert: PublishersAlert,\n    private readonly proofRepository: ProofRepository,\n    private readonly captionRepository: CaptionRepository,\n    private readonly informationRepository: InformationRepository,\n    private readonly signatureRepository: SignatureRepository\n  ) { }\n\n  ionViewWillEnter() {\n    this.proofRepository.refresh$().pipe(\n      switchMapTo(this.captionRepository.refresh$()),\n      switchMapTo(this.informationRepository.refresh$()),\n      switchMapTo(this.signatureRepository.refresh$()),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  publish() {\n    this.proof$.pipe(\n      first(),\n      switchMap(proof => this.publishersAlert.present$(proof)),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  remove() {\n    const onConfirm = () => this.proof$.pipe(\n      switchMap(proof => this.proofRepository.remove$(proof)),\n      switchMapTo(this.router.navigate(['..'])),\n      untilDestroyed(this)\n    ).subscribe();\n\n    return this.confirmAlert.present$(onConfirm).pipe(untilDestroyed(this)).subscribe();\n  }\n\n  editCaption() {\n    const captionInputName = 'captionInputName';\n    this.caption$.pipe(\n      first(),\n      switchMap(caption => this.alertController.create({\n        header: this.translocoService.translate('editCaption'),\n        inputs: [{\n          name: captionInputName,\n          type: 'text',\n          value: caption,\n          placeholder: this.translocoService.translate('nothingHere')\n        }],\n        buttons: [{\n          text: this.translocoService.translate('cancel'),\n          role: 'cancel'\n        }, {\n          text: this.translocoService.translate('ok'),\n          handler: (inputs) => this.saveCaption(inputs[captionInputName])\n        }]\n      })),\n      switchMap(alertElement => alertElement.present()),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  private saveCaption(text: string) {\n    this.proof$.pipe(\n      switchMap(proof => this.captionRepository.addOrEdit$({\n        proofHash: proof.hash,\n        text\n      })),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { defer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmAlert {\n\n  constructor(\n    private readonly alertController: AlertController,\n    private readonly translocoService: TranslocoService\n  ) { }\n\n  present$(onConfirm: () => void) {\n    return defer(() => this.alertController.create({\n      header: this.translocoService.translate('areYouSure'),\n      message: this.translocoService.translate('message.areYouSure'),\n      buttons: [{\n        text: this.translocoService.translate('cancel'),\n        role: 'cancel'\n      }, {\n        text: this.translocoService.translate('ok'),\n        handler: onConfirm\n      }]\n    })).pipe(\n      switchMap(alertElement => alertElement.present())\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport function isNonNullable<T>() {\n  return (source$: Observable<null | undefined | T>) => source$.pipe(\n    filter((v): v is NonNullable<T> => v !== null && v !== undefined)\n  );\n}\n"]}