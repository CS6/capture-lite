{"version":3,"sources":["webpack:///src/app/pages/settings/settings.page.html","webpack:///src/app/pages/settings/settings-routing.module.ts","webpack:///src/app/pages/settings/settings.module.ts","webpack:///src/app/pages/settings/settings.page.scss","webpack:///src/app/pages/settings/settings.page.ts"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","Device","SettingsPage","languageService","langauges","languages","currentLanguageKey$","isDeviceInfoCollectionEnabled$","isLocationInfoCollectionEnabled$","publicKey$","getPublicKey$","privateKey$","getPrivateKey$","version$","getInfo","pipe","languageKey","setCurrentLanguage$","subscribe","enable","setDeviceInfoCollection$","setLocationInfoCollection$","checkProperties","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAV9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,EAKP,iEALO,CADD;AAQRI,oBAAY,EAAE,CAAC,2DAAD;AARN,OAAT,CAU8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;AClBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSPE,M,GAAW,uD,CAAXA,M;;UAQKC,YAAY;AAavB,8BACmBC,eADnB,EACmD;AAAA;;AAAhC,eAAAA,eAAA,GAAAA,eAAA;AAZV,eAAAC,SAAA,GAAY,KAAKD,eAAL,CAAqBE,SAAjC;AACA,eAAAC,mBAAA,GAAsB,KAAKH,eAAL,CAAqBG,mBAA3C;AACA,eAAAC,8BAAA,GAAiC,+HAAkBA,8BAAlB,EAAjC;AACA,eAAAC,gCAAA,GAAmC,+HAAkBA,gCAAlB,EAAnC;AACA,eAAAC,UAAA,GAAa,gIAAyBC,aAAzB,EAAb;AACA,eAAAC,WAAA,GAAc,gIAAyBC,cAAzB,EAAd;AACA,eAAAC,QAAA,GAAW,mDAAM;AAAA,mBAAMZ,MAAM,CAACa,OAAP,EAAN;AAAA,WAAN,EAA8BC,IAA9B,CAClB,8DADkB,EAElB,6DAAM,YAAN,CAFkB,CAAX;AAOJ;;AAfkB;AAAA;AAAA,6CAiBJC,WAjBI,EAiBiB;AACtC,iBAAKb,eAAL,CAAqBc,mBAArB,CAAyCD,WAAzC,EAAsDD,IAAtD,CACE,6EAAe,IAAf,CADF,EAEEG,SAFF;AAGD;AArBsB;AAAA;AAAA,kDAuBCC,MAvBD,EAuBkB;AACvC,2IAAkBC,wBAAlB,CAA2CD,MAA3C,EAAmDJ,IAAnD,CACE,6EAAe,IAAf,CADF,EAEEG,SAFF;AAGD;AA3BsB;AAAA;AAAA,oDA6BGC,MA7BH,EA6BoB;AACzC,2IAAkBE,0BAAlB,CAA6CF,MAA7C,EAAqDJ,IAArD,CACE,6EAAe,IAAf,CADF,EAEEG,SAFF;AAGD;AAjCsB;;AAAA;AAAA,S;;;;gBAVhB;;;;AAUIhB,kBAAY,6DANxB,2EAAa;AAAEoB,uBAAe,EAAE;AAAnB,OAAb,CAMwB,EALxB,gEAAU;AACTC,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,OAAV,CAKwB,GAAZtB,YAAY,CAAZ","file":"pages-settings-settings-module-es5.js","sourcesContent":["export default \"<ion-header *transloco=\\\"let t\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"..\\\" routerDirection=\\\"back\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ t('settings') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *transloco=\\\"let t\\\">\\n  <ion-list>\\n    <ion-list-header>{{ t('general') }}</ion-list-header>\\n    <ion-item>\\n      <ion-icon name=\\\"language\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>{{ t('languages') }}</ion-label>\\n      <ion-select [ngModel]=\\\"currentLanguageKey$ | async\\\" (ngModelChange)=\\\"setCurrentLanguage($event)\\\">\\n        <ion-select-option *ngFor=\\\"let language of langauges | keyvalue\\\" [value]=\\\"language.key\\\">{{ language.value }}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-list-header>{{ t('defaultInformationProvider') + ' (Capacitor)' }}</ion-list-header>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-icon name=\\\"phone-portrait\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>{{ t('collectDeviceInfo') }}</ion-label>\\n      <ion-toggle [checked]=\\\"isDeviceInfoCollectionEnabled$ | async\\\"\\n        (ionChange)=\\\"setDeviceInfoCollection($event.detail.checked)\\\" slot=\\\"end\\\"></ion-toggle>\\n    </ion-item>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-icon name=\\\"locate\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>{{ t('collectLocationInfo') }}</ion-label>\\n      <ion-toggle [checked]=\\\"isLocationInfoCollectionEnabled$ | async\\\"\\n        (ionChange)=\\\"setLocationInfoCollection($event.detail.checked)\\\" slot=\\\"end\\\"></ion-toggle>\\n    </ion-item>\\n    <ion-list-header>{{ t('defaultSignature') + ' (Web Crypto API)' }}</ion-list-header>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-icon name=\\\"key\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('publicKey') }}</h2>\\n        <p>{{ publicKey$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-icon name=\\\"key\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{ t('privateKey') }}</h2>\\n        <p>{{ privateKey$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-list-header>{{ t('about') }}</ion-list-header>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-icon name=\\\"information\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>\\n        <h2>{{ t('version') }}</h2>\\n        <p>{{ version$ | async }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    TranslocoModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { defer } from 'rxjs';\nimport { first, pluck } from 'rxjs/operators';\nimport { CapacitorProvider } from 'src/app/services/collector/information/capacitor-provider/capacitor-provider';\nimport { DefaultSignatureProvider } from 'src/app/services/collector/signature/default-provider/default-provider';\nimport { LanguageService } from 'src/app/services/language/language.service';\n\nconst { Device } = Plugins;\n\n@UntilDestroy({ checkProperties: true })\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage {\n\n  readonly langauges = this.languageService.languages;\n  readonly currentLanguageKey$ = this.languageService.currentLanguageKey$;\n  readonly isDeviceInfoCollectionEnabled$ = CapacitorProvider.isDeviceInfoCollectionEnabled$();\n  readonly isLocationInfoCollectionEnabled$ = CapacitorProvider.isLocationInfoCollectionEnabled$();\n  readonly publicKey$ = DefaultSignatureProvider.getPublicKey$();\n  readonly privateKey$ = DefaultSignatureProvider.getPrivateKey$();\n  readonly version$ = defer(() => Device.getInfo()).pipe(\n    first(),\n    pluck('appVersion')\n  );\n\n  constructor(\n    private readonly languageService: LanguageService\n  ) { }\n\n  setCurrentLanguage(languageKey: string) {\n    this.languageService.setCurrentLanguage$(languageKey).pipe(\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setDeviceInfoCollection(enable: boolean) {\n    CapacitorProvider.setDeviceInfoCollection$(enable).pipe(\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setLocationInfoCollection(enable: boolean) {\n    CapacitorProvider.setLocationInfoCollection$(enable).pipe(\n      untilDestroyed(this)\n    ).subscribe();\n  }\n}\n"]}